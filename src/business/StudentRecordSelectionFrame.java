/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package business;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import beans.StudentBean;
import daoimpl.StudentDaoImpl;
import utility.UtilityMethods;

/**
 *
 * @author Bilal Bhatti
 */
public class StudentRecordSelectionFrame extends javax.swing.JFrame {

    private DefaultTableModel tableModel;
    private static final String searchTip = "Search By Keyword";

    /**
     * Creates new form StudentRecordSelectionFrame
     */
    public StudentRecordSelectionFrame() {
        this.setUndecorated(true);
        initComponents();
        deletebtn.setVisible(false);
        updatebtn.setVisible(false);
        checkPermissions();
        table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 14));
        tableModel = (DefaultTableModel) table.getModel();
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePanel = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        tableScorllPanel = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        updatebtn = new javax.swing.JLabel();
        deletebtn = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        crossBtn = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablePanel.setBackground(new java.awt.Color(255, 255, 255));
        tablePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        searchField.setForeground(new java.awt.Color(153, 153, 153));
        searchField.setText("Search By Keyword");
        searchField.setToolTipText("Sort The Table");
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFieldFocusLost(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });
        tablePanel.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 300, 40));

        table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S_ID", "Student Name", "Surname", "Gender", "Guardian", "Guardian Relation", "Guardian Contact", "DOB", "CNIC", "Contact No", "Address", "Admission Date", "Religion", "Nationality"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(20);
        table.setRowMargin(2);
        table.setSelectionBackground(new java.awt.Color(0, 102, 0));
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.getTableHeader().setResizingAllowed(false);
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableMouseReleased(evt);
            }
        });
        tableScorllPanel.setViewportView(table);

        tablePanel.add(tableScorllPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 1350, 740));

        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/staracademy/com/images/updatebtn.png"))); // NOI18N
        updatebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatebtnMouseEntered(evt);
            }
        });
        tablePanel.add(updatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 30, 170, 50));

        deletebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/staracademy/com/images/deletebtn.png"))); // NOI18N
        deletebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deletebtnMouseEntered(evt);
            }
        });
        tablePanel.add(deletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 30, 170, 50));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Search");
        tablePanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 60, 40));

        getContentPane().add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1370, 830));

        crossBtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        crossBtn.setForeground(new java.awt.Color(255, 255, 255));
        crossBtn.setText("X");
        crossBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        crossBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crossBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                crossBtnMouseEntered(evt);
            }
        });
        getContentPane().add(crossBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 20, 20, 30));

        jLabel1.setBackground(new java.awt.Color(0, 102, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("                                                                                   STUDENT RECORD");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 70));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateTable() {
        tableModel.setNumRows(0);
        table.getColumnModel().getColumn(0).setWidth(0);
        table.getColumnModel().getColumn(0).setMinWidth(0);
        table.getColumnModel().getColumn(0).setMaxWidth(0);
        ResultSet rs = new StudentDaoImpl().getAllStudents();

        try {
            StudentBean student;
            while (rs.next()) {
                student = new StudentBean();
                student.setStudentId(rs.getInt("s_id"));
                student.setStudentName(rs.getString("s_name"));
                student.setSurname(rs.getString("surname"));
                student.setGender(rs.getString("gender"));
                student.setGuardian(rs.getString("guardian"));
                student.setGuardianContact(rs.getString("guardian_contact"));
                student.setGuardianRelation(rs.getString("guardian_relation"));
                student.setDob(rs.getString("dob"));
                student.setStudentNic(rs.getString("cnic"));
                student.setContact(rs.getString("contact_no"));
                student.setAddress(rs.getString("address"));
                student.setAdmissionDate(rs.getString("doa"));
                student.setReligion(rs.getString("religion"));
                student.setNationality(rs.getString("nationality"));
                tableModel.addRow(new Object[]{
                    student.getStudentId(),
                    student.getStudentName(),
                    student.getSurname(),
                    student.getGender(),
                    student.getGuardian(),
                    student.getGuardianRelation(),
                    student.getGuardianContact(),
                    student.getDob(),
                    student.getStudentNic(),
                    student.getContact(),
                    student.getAddress(),
                    student.getAdmissionDate(),
                    student.getReligion(),
                    student.getNationality(),});
            }
        } catch (SQLException sqle) {
            System.out.println("Exception is Student Record Selection Frame in updateTable() Method...");
            System.out.println(sqle.getMessage());
        }
    }

    private void crossBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crossBtnMouseEntered
        // TODO add your handling code here:
        crossBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_crossBtnMouseEntered

    private void crossBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crossBtnMouseClicked
        new StudentAdmissionFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_crossBtnMouseClicked

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:

        UtilityMethods.searchDataFromTable(table, searchField);


    }//GEN-LAST:event_searchFieldKeyReleased

    private void searchFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusGained
        // TODO add your handling code here:
        if (searchField.getText().equals(searchTip)) {
            searchField.setText("");
        }
    }//GEN-LAST:event_searchFieldFocusGained

    private void searchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusLost
        // TODO add your handling code here:
        if (searchField.getText().isEmpty()) {
            searchField.setForeground(new Color(153, 153, 153));
            searchField.setFont(new Font("Century Gothic", Font.PLAIN, 18));
            searchField.setText(searchTip);
        }

    }//GEN-LAST:event_searchFieldFocusLost

    private void tableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseReleased

    private void updatebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseEntered
        // TODO add your handling code here:
        updatebtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_updatebtnMouseEntered

    private void deletebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnMouseEntered
        // TODO add your handling code here:
        deletebtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_deletebtnMouseEntered

    private void updatebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseClicked
        // TODO add your handling code here:
        openFrame();
    }//GEN-LAST:event_updatebtnMouseClicked

    private void deletebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnMouseClicked
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            StudentBean student = new StudentBean();
            student.setStudentId(new Integer(table.getValueAt(selectedRow, 0).toString()));
            student.setModifiedBy(41);
            student.setModifiedDate(new Date() + "");

            int status = new StudentDaoImpl().deleteStudent(student);
            if (status == 1) {
                new MessageForm("Success", "Student deleted", "success.png").setVisible(true);
                updateTable();
            }

        }

    }//GEN-LAST:event_deletebtnMouseClicked

    private void openFrame() {
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {

            System.out.println("Selection is : " + selectedRow);
            System.out.println("Name: " + table.getValueAt(selectedRow, 1).toString());

            StudentBean student = new StudentBean();
            student.setStudentId(new Integer(table.getValueAt(selectedRow, 0).toString()));

            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    StudentAdmissionFrame frame = new StudentAdmissionFrame(student);
                    frame.setVisible(true);
                }
            });

            this.dispose();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentRecordSelectionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentRecordSelectionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentRecordSelectionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentRecordSelectionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentRecordSelectionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel crossBtn;
    private javax.swing.JLabel deletebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField searchField;
    private javax.swing.JTable table;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScorllPanel;
    private javax.swing.JLabel updatebtn;
    // End of variables declaration//GEN-END:variables

    private void checkPermissions() {
//      List<PermissionBean> permissions = new RolePermissionDaoImpl().getAssignedPermissions(LoginFrame.userBean.getRole());
//        for(PermissionBean pb:permissions){
//            if(pb.getPermission().equals("Delete Student")){
//                deletebtn.setVisible(true);
//            }
//            if(pb.getPermission().equals("Update Student")){
//                updatebtn.setVisible(true);
//            }
//        }
    }
}
