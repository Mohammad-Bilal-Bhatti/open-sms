/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package business;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import utility.DateFormatter;
import beans.StudentBean;
import daoimpl.StudentDaoImpl;
import utility.CustomFileFilter;
import utility.ImagesHandler;
import config.Config;

/**
 *
 * @author Bilal Bhatti
 */
public class StudentAdmissionFrame extends javax.swing.JFrame {

    /**
     * Creates new form StudentAdmissionFrame
     */
    private File imageFile = null;
    private String searchPath = Config.FILE_CHOOSER_SEARCH_PATH;

    private Color fg_color_on_focus_lost = new Color(153, 153, 153);
    private Font font_on_focus_lost = new Font("Century Gothic", Font.PLAIN, 18);
    private Color fg_color_on_focus_gain = new Color(120, 120, 120);
    private Font font_on_focus_gain = new Font("Tahoma", Font.PLAIN, 18);
    ;

    private Border redLineBroder = BorderFactory.createLineBorder(Color.RED, 1);
    private Border noBorder = null;

    private final String studentImgDir = Config.IMG_DIR;
    private boolean onUpdate = false;
    private Integer sIdOnUpdate;
    private File prevImageFile;

    private static final String studentNameTip = "Student Name e.g[Ali]";
    private static final String studentSurnameTip = "Student Surname";
    private static final String studentContactTip = "Student Contact e.g[03001234567]";
    private static final String studentCnicTip = "Student CNIC e.g[12345-1234567-8]";
    private static final String studentAddressTip = "Student Home Address";
    private static final String studentDobTip = "01 Jan 1995";
    private static final String guardianNameTip = "Guardian Name";
    private static final String guardianRelationTip = "Guardian Relation e.g[Father/Brother]";
    private static final String guardianContactTip = "Guardian Contact Number";
    private static final String matricObtMarksTip = "Matric Obt Marks";
    private static final String matricSeatNoTip = "Matric Seat No";
    private static final String interObtMarksTip = "Inter Obt Marks";
    private static final String interSeatNoTip = "Inter Seat No";
    private static final String validMarks = "Enter Valid Marks";

    private static final String studentNameRequiredTip = "Student Name Is Required";
    private static final String studentSurnameRequiredTip = "Student Surname Is Required";
    private static final String studentContactRequiredTip = "Student Contact Is Required";
    private static final String studentCnicRequiredTip = "Student CNIC Is Required";
    private static final String studentAddressRequiredTip = "Student Address Is Required";
    private static final String guardianNameRequiredTip = "Guarian Name is Required";
    private static final String guardianRelationRequiredTip = "Guarian Relation is Required";
    private static final String guardianContactRequiredTip = "Guarian Contact is Required";

    public StudentAdmissionFrame(StudentBean student) {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        this.setLocationRelativeTo(null);
        genderGroup.add(maleRadio);
        genderGroup.add(femaleRadio);
        hideAllButtons();
        checkPermissions();
        //Load the data of the student from db given by id...
        student = new StudentDaoImpl().getStudentById(student.getStudentId());
        studentDOBField.requestFocus();
        setFields(student);
        onUpdate = true;
        sIdOnUpdate = student.getStudentId();
    }

    public StudentAdmissionFrame() {
        initComponents();
        genderGroup.add(maleRadio);
        genderGroup.add(femaleRadio);
        onUpdate = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGroup = new javax.swing.ButtonGroup();
        imagingPanel = new javax.swing.JPanel();
        uploadImageBtn = new javax.swing.JLabel();
        studentImageIcon = new javax.swing.JLabel();
        academicsInfoPanel = new javax.swing.JPanel();
        matricBoardCombo = new javax.swing.JComboBox<>();
        matricPassYearSpinner = new com.toedter.calendar.JYearChooser();
        interBoardCombo = new javax.swing.JComboBox<>();
        matricMarksField = new javax.swing.JTextField();
        interMarksField = new javax.swing.JTextField();
        interSeatNumberField = new javax.swing.JTextField();
        matricSeatNumberField = new javax.swing.JTextField();
        interPassYearSpinner = new com.toedter.calendar.JYearChooser();
        academicSeatLabel = new javax.swing.JLabel();
        academicBoardLabel = new javax.swing.JLabel();
        academicMarksLabel = new javax.swing.JLabel();
        academicBoardSecLabel = new javax.swing.JLabel();
        academicMarksSecLabel = new javax.swing.JLabel();
        academicPassYearLabel = new javax.swing.JLabel();
        academicSecPassYearLabel = new javax.swing.JLabel();
        academicMatSeatLabel = new javax.swing.JLabel();
        guardianInfoPanel = new javax.swing.JPanel();
        guardianContactField = new javax.swing.JFormattedTextField();
        guardianRelationField = new javax.swing.JTextField();
        guardianNameField = new javax.swing.JTextField();
        jLocaleChooser1 = new com.toedter.components.JLocaleChooser();
        gardianNameLabel = new javax.swing.JLabel();
        gardianRelationLabel = new javax.swing.JLabel();
        garidanPhoneLabel = new javax.swing.JLabel();
        studentInfoPanel = new javax.swing.JPanel();
        femaleRadio = new javax.swing.JRadioButton();
        maleRadio = new javax.swing.JRadioButton();
        studentDOBField = new com.toedter.calendar.JDateChooser();
        studentNationalityCombo = new javax.swing.JComboBox<>();
        studentCnicField = new javax.swing.JFormattedTextField();
        studentReligionCombo = new javax.swing.JComboBox<>();
        studentAddressField = new javax.swing.JTextField();
        studentContactField = new javax.swing.JFormattedTextField();
        studentSurnameField = new javax.swing.JTextField();
        studentNameField = new javax.swing.JTextField();
        studentPhoneLabel = new javax.swing.JLabel();
        studentNicLabel = new javax.swing.JLabel();
        studentAddressLabel = new javax.swing.JLabel();
        studentNationalityLabel = new javax.swing.JLabel();
        studentReligionLabel = new javax.swing.JLabel();
        studentDobLabel = new javax.swing.JLabel();
        studentSurnameLabel = new javax.swing.JLabel();
        studentNameLabel = new javax.swing.JLabel();
        studentGenderLabel = new javax.swing.JLabel();
        cross_icon = new javax.swing.JLabel();
        addbtn = new javax.swing.JLabel();
        updatebtn = new javax.swing.JLabel();
        header = new javax.swing.JLabel();
        resetBtn = new javax.swing.JLabel();
        showstudents = new javax.swing.JLabel();
        bgLegand = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imagingPanel.setBackground(new java.awt.Color(255, 255, 255));
        imagingPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        imagingPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        uploadImageBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/uploadbtn.png"))); // NOI18N
        uploadImageBtn.setToolTipText("Upload Image");
        uploadImageBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadImageBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadImageBtnMouseEntered(evt);
            }
        });
        imagingPanel.add(uploadImageBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 230, -1));

        studentImageIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/profile_img.png"))); // NOI18N
        studentImageIcon.setMaximumSize(new java.awt.Dimension(220, 180));
        studentImageIcon.setMinimumSize(new java.awt.Dimension(50, 50));
        imagingPanel.add(studentImageIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 220, 230));

        getContentPane().add(imagingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 90, 260, 320));

        academicsInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        academicsInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Academics Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        academicsInfoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        matricBoardCombo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        matricBoardCombo.setMaximumRowCount(7);
        matricBoardCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Matric Board", "BISE Sukkur", "BISE Larkana", "BISE Hyderabad", "BISE Karachi", "BISE Mirpur Khas", "A Level", "O Level" }));
        matricBoardCombo.setToolTipText("Matric Board");
        matricBoardCombo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        matricBoardCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matricBoardComboActionPerformed(evt);
            }
        });
        academicsInfoPanel.add(matricBoardCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 190, 40));

        matricPassYearSpinner.setBackground(new java.awt.Color(255, 255, 255));
        matricPassYearSpinner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        matricPassYearSpinner.setToolTipText("Matric Pass Year");
        matricPassYearSpinner.setEndYear(2050);
        matricPassYearSpinner.setStartYear(1990);
        matricPassYearSpinner.setValue(2010);
        academicsInfoPanel.add(matricPassYearSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 100, 40));

        interBoardCombo.setBackground(new java.awt.Color(204, 204, 255));
        interBoardCombo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        interBoardCombo.setMaximumRowCount(7);
        interBoardCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Inter Board", "BISE Sukkur", "BISE Larkana", "BISE Hyderabad", "BISE Karachi", "BISE Mirpur Khas", "A Level", "O Level" }));
        interBoardCombo.setToolTipText("Matric Board");
        interBoardCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interBoardComboActionPerformed(evt);
            }
        });
        academicsInfoPanel.add(interBoardCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 190, 40));

        matricMarksField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        matricMarksField.setText("Matric Obt Marks");
        matricMarksField.setToolTipText("Matric Obtained Marks");
        matricMarksField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        matricMarksField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                matricMarksFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                matricMarksFieldFocusLost(evt);
            }
        });
        matricMarksField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matricMarksFieldActionPerformed(evt);
            }
        });
        academicsInfoPanel.add(matricMarksField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 190, 40));

        interMarksField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        interMarksField.setText("Inter Obt Marks");
        interMarksField.setToolTipText("Inter Obtained Marks");
        interMarksField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        interMarksField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                interMarksFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                interMarksFieldFocusLost(evt);
            }
        });
        academicsInfoPanel.add(interMarksField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 190, 40));

        interSeatNumberField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        interSeatNumberField.setText("Inter Seat No");
        interSeatNumberField.setToolTipText("Inter Seat Number");
        interSeatNumberField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        interSeatNumberField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                interSeatNumberFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                interSeatNumberFieldFocusLost(evt);
            }
        });
        interSeatNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interSeatNumberFieldActionPerformed(evt);
            }
        });
        academicsInfoPanel.add(interSeatNumberField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, 130, 40));

        matricSeatNumberField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        matricSeatNumberField.setText("Matric Seat No");
        matricSeatNumberField.setToolTipText("Matric Seat Number");
        matricSeatNumberField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        matricSeatNumberField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                matricSeatNumberFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                matricSeatNumberFieldFocusLost(evt);
            }
        });
        academicsInfoPanel.add(matricSeatNumberField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 130, 40));

        interPassYearSpinner.setBackground(new java.awt.Color(204, 204, 255));
        interPassYearSpinner.setToolTipText("Matric Pass Year");
        interPassYearSpinner.setEndYear(2050);
        interPassYearSpinner.setValue(2010);
        academicsInfoPanel.add(interPassYearSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, 100, 40));

        academicSeatLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        academicSeatLabel.setText("Seat");
        academicsInfoPanel.add(academicSeatLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, 50, 40));

        academicBoardLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        academicBoardLabel.setText("Board");
        academicsInfoPanel.add(academicBoardLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 70, 40));

        academicMarksLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        academicMarksLabel.setText("Marks");
        academicsInfoPanel.add(academicMarksLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 70, 40));

        academicBoardSecLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        academicBoardSecLabel.setText("Board");
        academicsInfoPanel.add(academicBoardSecLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 70, 40));

        academicMarksSecLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        academicMarksSecLabel.setText("Marks");
        academicsInfoPanel.add(academicMarksSecLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 70, 40));

        academicPassYearLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        academicPassYearLabel.setText("Pass Year");
        academicsInfoPanel.add(academicPassYearLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 80, 40));

        academicSecPassYearLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        academicSecPassYearLabel.setText("Pass Year");
        academicsInfoPanel.add(academicSecPassYearLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 80, 40));

        academicMatSeatLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        academicMatSeatLabel.setText("Seat");
        academicsInfoPanel.add(academicMatSeatLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 50, 40));

        getContentPane().add(academicsInfoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 360, 490, 370));

        guardianInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        guardianInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Guardian Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        guardianInfoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        guardianContactField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        try {
            guardianContactField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        guardianContactField.setToolTipText("Guardian Contact Number");
        guardianContactField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        guardianContactField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                guardianContactFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                guardianContactFieldFocusLost(evt);
            }
        });
        guardianContactField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardianContactFieldActionPerformed(evt);
            }
        });
        guardianInfoPanel.add(guardianContactField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 300, 40));

        guardianRelationField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        guardianRelationField.setText("Guardian Relation e.g[Father/Brother]");
        guardianRelationField.setToolTipText("Guardian Relation");
        guardianRelationField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        guardianRelationField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                guardianRelationFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                guardianRelationFieldFocusLost(evt);
            }
        });
        guardianRelationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardianRelationFieldActionPerformed(evt);
            }
        });
        guardianInfoPanel.add(guardianRelationField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 300, 40));

        guardianNameField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        guardianNameField.setText("Guardian Name");
        guardianNameField.setToolTipText("Guardian Name");
        guardianNameField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        guardianNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                guardianNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                guardianNameFieldFocusLost(evt);
            }
        });
        guardianNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardianNameFieldActionPerformed(evt);
            }
        });
        guardianInfoPanel.add(guardianNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 300, 40));
        guardianInfoPanel.add(jLocaleChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, -1, -1));

        gardianNameLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        gardianNameLabel.setText("G Name");
        guardianInfoPanel.add(gardianNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 80, 40));

        gardianRelationLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        gardianRelationLabel.setText("G Relation");
        guardianInfoPanel.add(gardianRelationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, 40));

        garidanPhoneLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        garidanPhoneLabel.setText("Phone");
        guardianInfoPanel.add(garidanPhoneLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 70, 40));

        getContentPane().add(guardianInfoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 490, 280));

        studentInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        studentInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Student Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        studentInfoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        femaleRadio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        femaleRadio.setText("Female");
        femaleRadio.setToolTipText("Student Gender");
        femaleRadio.setOpaque(false);
        femaleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioActionPerformed(evt);
            }
        });
        studentInfoPanel.add(femaleRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 540, -1, -1));

        maleRadio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        maleRadio.setSelected(true);
        maleRadio.setText("Male");
        maleRadio.setToolTipText("Student Gender");
        maleRadio.setOpaque(false);
        studentInfoPanel.add(maleRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 540, -1, -1));

        studentDOBField.setBackground(new java.awt.Color(255, 255, 255));
        studentDOBField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        studentDOBField.setToolTipText("Student Date Of Birth");
        studentDOBField.setDate(new java.util.Date(95,0,1));
        studentDOBField.setDateFormatString("dd MMMM yyyy");
        studentDOBField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        studentDOBField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentDOBFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentDOBFieldFocusLost(evt);
            }
        });
        studentInfoPanel.add(studentDOBField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 470, 300, 40));

        studentNationalityCombo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        studentNationalityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Nationality", "Pakistani", "Indian", "Turkish", "African", "Australian", "Canadian", "Foreigner", "Other" }));
        studentNationalityCombo.setToolTipText("Student Nationality");
        studentNationalityCombo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        studentNationalityCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentNationalityComboFocusGained(evt);
            }
        });
        studentNationalityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNationalityComboActionPerformed(evt);
            }
        });
        studentInfoPanel.add(studentNationalityCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 300, 40));

        studentCnicField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        try {
            studentCnicField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-#######-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        studentCnicField.setToolTipText("Student CNIC");
        studentCnicField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        studentCnicField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentCnicFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentCnicFieldFocusLost(evt);
            }
        });
        studentCnicField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentCnicFieldActionPerformed(evt);
            }
        });
        studentInfoPanel.add(studentCnicField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 300, 40));

        studentReligionCombo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        studentReligionCombo.setMaximumRowCount(5);
        studentReligionCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Religion", "Islam", "Hinduism", "christian", "Judish", "parsi", "other" }));
        studentReligionCombo.setToolTipText("Student Religion");
        studentReligionCombo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        studentReligionCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentReligionComboFocusGained(evt);
            }
        });
        studentInfoPanel.add(studentReligionCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, 300, 40));

        studentAddressField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        studentAddressField.setText("Student Home Address");
        studentAddressField.setToolTipText("Student Home Address");
        studentAddressField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        studentAddressField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentAddressFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentAddressFieldFocusLost(evt);
            }
        });
        studentAddressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentAddressFieldActionPerformed(evt);
            }
        });
        studentInfoPanel.add(studentAddressField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 300, 40));

        studentContactField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        try {
            studentContactField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        studentContactField.setToolTipText("Student Contact Number");
        studentContactField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        studentContactField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentContactFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentContactFieldFocusLost(evt);
            }
        });
        studentContactField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentContactFieldActionPerformed(evt);
            }
        });
        studentInfoPanel.add(studentContactField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 300, 40));

        studentSurnameField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        studentSurnameField.setText("Student Surname");
        studentSurnameField.setToolTipText("Student Surname");
        studentSurnameField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        studentSurnameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentSurnameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentSurnameFieldFocusLost(evt);
            }
        });
        studentSurnameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentSurnameFieldActionPerformed(evt);
            }
        });
        studentInfoPanel.add(studentSurnameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 300, 40));

        studentNameField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        studentNameField.setText("Student Name e.g[Ali]");
        studentNameField.setToolTipText("Student Name");
        studentNameField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        studentNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentNameFieldFocusLost(evt);
            }
        });
        studentNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameFieldActionPerformed(evt);
            }
        });
        studentInfoPanel.add(studentNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 300, 40));

        studentPhoneLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        studentPhoneLabel.setText("Phone");
        studentInfoPanel.add(studentPhoneLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 80, 40));

        studentNicLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        studentNicLabel.setText("CNIC");
        studentInfoPanel.add(studentNicLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 60, 40));

        studentAddressLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        studentAddressLabel.setText("Address");
        studentInfoPanel.add(studentAddressLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 80, 40));

        studentNationalityLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        studentNationalityLabel.setText("Nationality");
        studentInfoPanel.add(studentNationalityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 100, 40));

        studentReligionLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        studentReligionLabel.setText("Religion");
        studentInfoPanel.add(studentReligionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 80, 40));

        studentDobLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        studentDobLabel.setText("Date of Birth");
        studentInfoPanel.add(studentDobLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 110, 40));

        studentSurnameLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        studentSurnameLabel.setText("Surname");
        studentInfoPanel.add(studentSurnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 80, 40));

        studentNameLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        studentNameLabel.setText("Name ");
        studentInfoPanel.add(studentNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 54, 80, 30));

        studentGenderLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        studentGenderLabel.setText("Gender");
        studentInfoPanel.add(studentGenderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 80, 30));

        getContentPane().add(studentInfoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 440, 650));

        cross_icon.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cross_icon.setForeground(new java.awt.Color(255, 255, 255));
        cross_icon.setText("X");
        cross_icon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cross_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cross_iconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cross_iconMouseEntered(evt);
            }
        });
        getContentPane().add(cross_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 20, -1, -1));

        addbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbtn.png"))); // NOI18N
        addbtn.setToolTipText("Add Student Record");
        addbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addbtnMouseEntered(evt);
            }
        });
        getContentPane().add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 440, -1, 50));

        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updatebtn.png"))); // NOI18N
        updatebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatebtnMouseEntered(evt);
            }
        });
        getContentPane().add(updatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 510, -1, 50));

        header.setBackground(new java.awt.Color(0, 102, 0));
        header.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        header.setForeground(new java.awt.Color(255, 255, 255));
        header.setText("                                                                   STUDENT");
        header.setOpaque(true);
        getContentPane().add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 70));

        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/resetbtn.png"))); // NOI18N
        resetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetBtnMouseClicked(evt);
            }
        });
        getContentPane().add(resetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 572, 160, 60));

        showstudents.setBackground(new java.awt.Color(0, 102, 0));
        showstudents.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        showstudents.setForeground(new java.awt.Color(255, 255, 255));
        showstudents.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view studentlbl.png"))); // NOI18N
        showstudents.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showstudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showstudentsMouseClicked(evt);
            }
        });
        getContentPane().add(showstudents, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 640, 160, 60));

        bgLegand.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/student_bg.png"))); // NOI18N
        getContentPane().add(bgLegand, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 900));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setFields(StudentBean student) {

        studentNameField.setText(student.getStudentName());
        studentSurnameField.setText(student.getSurname());
        studentContactField.setText(student.getContact());
        studentCnicField.setText(student.getStudentNic());
        studentAddressField.setText(student.getAddress());
        studentReligionCombo.setSelectedItem(student.getReligion());
        studentNationalityCombo.setSelectedItem(student.getNationality());

        studentDOBField.setDate(DateFormatter.parseDate(student.getDob()));
        boolean isMale = student.getGender().equalsIgnoreCase("Male");
        if (isMale) {
            maleRadio.setSelected(true);
        } else {
            femaleRadio.setSelected(true);
        }
        guardianNameField.setText(student.getGuardian());
        guardianRelationField.setText(student.getGuardianRelation());
        guardianContactField.setText(student.getGuardianContact());

        ImagesHandler handler = new ImagesHandler(studentImgDir);
        String pic_path = student.getPicturePath();
        //Dont load the image if the  image file path is null or an empty string
        if (pic_path != null) {
            if (!pic_path.equals("")) {
                ImageIcon img = handler.loagImage(pic_path);
                studentImageIcon.setIcon(img);
            }
            imageFile = new File(pic_path);
            prevImageFile = new File(pic_path);
        } else {
            imageFile = null;
            prevImageFile = new File("");
        }

        matricBoardCombo.setSelectedItem(student.getMatricBoard());
        try {
            matricPassYearSpinner.setValue(Integer.parseInt(student.getMatricPassYear()));
        } catch (Exception e) {
        }
        matricMarksField.setText(student.getMatricMarks().toString());
        matricSeatNumberField.setText(student.getMatricSeatNumber());

        interBoardCombo.setSelectedItem(student.getInterBoard());
        try {
            interPassYearSpinner.setValue(Integer.parseInt(student.getInterPassYear()));
        } catch (Exception e) {
        }
        interMarksField.setText(student.getInterMarks().toString());
        interSeatNumberField.setText(student.getInterSeatNumber());

    }

    private void setForegroundAndFontOnLost(JTextField textField) {
        textField.setForeground(fg_color_on_focus_lost);
        textField.setFont(font_on_focus_lost);
    }

    private void setForegroundAndFontOnLost(JFormattedTextField textField) {
        textField.setForeground(fg_color_on_focus_lost);
        textField.setFont(font_on_focus_lost);
    }

    private void setForegroundAndFontOnGain(JTextField textField) {
        textField.setForeground(fg_color_on_focus_gain);
        textField.setFont(font_on_focus_gain);
    }

    private void setForegroundAndFontOnGain(JFormattedTextField textField) {
        textField.setForeground(fg_color_on_focus_gain);
        textField.setFont(font_on_focus_gain);
    }


    private void cross_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cross_iconMouseClicked
//        new MainFrame().setVisible(true);
//        this.dispose();
    }//GEN-LAST:event_cross_iconMouseClicked

    private void guardianNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guardianNameFieldFocusGained
        // TODO add your handling code here:
        if (guardianNameField.getText().equals(guardianNameTip) || guardianNameField.getText().equals(guardianNameRequiredTip)) {
            guardianNameField.setText("");
        }
        setForegroundAndFontOnGain(guardianNameField);


    }//GEN-LAST:event_guardianNameFieldFocusGained

    private void guardianNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guardianNameFieldFocusLost
        // TODO add your handling code here:
        if (guardianNameField.getText().isEmpty()) {
            setForegroundAndFontOnLost(guardianNameField);
            guardianNameField.setText(guardianNameTip);
        }

    }//GEN-LAST:event_guardianNameFieldFocusLost

    private void guardianRelationFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guardianRelationFieldFocusGained
        // TODO add your handling code here:
        if (guardianRelationField.getText().equals(guardianRelationTip) || guardianRelationField.getText().equals(guardianRelationRequiredTip)) {
            guardianRelationField.setText("");
        }
        setForegroundAndFontOnGain(guardianRelationField);


    }//GEN-LAST:event_guardianRelationFieldFocusGained

    private void guardianRelationFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guardianRelationFieldFocusLost
        // TODO add your handling code here:
        if (guardianRelationField.getText().isEmpty()) {
            setForegroundAndFontOnLost(guardianRelationField);
            guardianRelationField.setText(guardianRelationTip);
        }
    }//GEN-LAST:event_guardianRelationFieldFocusLost

    private void guardianContactFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guardianContactFieldFocusGained
        // TODO add your handling code here:
        if (guardianContactField.getText().equals(guardianContactTip) || guardianContactField.getText().equals(guardianContactRequiredTip)) {
            guardianContactField.setText("");
        }
        setForegroundAndFontOnGain(guardianContactField);
    }//GEN-LAST:event_guardianContactFieldFocusGained

    private void guardianContactFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guardianContactFieldFocusLost
        // TODO add your handling code here:
        if (guardianContactField.getText().isEmpty()) {
            setForegroundAndFontOnLost(guardianContactField);
            guardianContactField.setText(guardianContactTip);
        }
    }//GEN-LAST:event_guardianContactFieldFocusLost

    private void guardianContactFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardianContactFieldActionPerformed
        // TODO add your handling code here:
        studentDOBField.requestFocus();
    }//GEN-LAST:event_guardianContactFieldActionPerformed

    private void cross_iconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cross_iconMouseEntered
        // TODO add your handling code here:
        cross_icon.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_cross_iconMouseEntered

    private void uploadImageBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadImageBtnMouseEntered
        // TODO add your handling code here:
        uploadImageBtn.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_uploadImageBtnMouseEntered

    private void setBorderAndForegroundOnMissingValue(JTextField textField) {
        textField.setBorder(redLineBroder);
        textField.setForeground(Color.RED);
    }

    private void setBorderAndForegroundOnMissingValue(JFormattedTextField textField) {
        textField.setBorder(redLineBroder);
        textField.setForeground(Color.RED);
    }

    private boolean validateForm() {

        boolean ok = true;

        if (studentNameField.getText().equals(studentNameTip) || studentNameField.getText().equals(studentNameRequiredTip)) {
            setBorderAndForegroundOnMissingValue(studentNameField);
            studentNameField.setText(studentNameRequiredTip);
            studentDOBField.requestFocus();
            ok = false;
        }
        if (studentSurnameField.getText().equals(studentSurnameTip) || studentSurnameField.getText().equals(studentSurnameRequiredTip)) {
            setBorderAndForegroundOnMissingValue(studentSurnameField);
            studentSurnameField.setText(studentSurnameRequiredTip);
            studentDOBField.requestFocus();
            ok = false;
        }
        if (studentContactField.getText().equals(studentContactTip) || studentContactField.getText().equals(studentContactRequiredTip) || studentContactField.getText().equals("    -       ")) {
            setBorderAndForegroundOnMissingValue(studentContactField);
            studentContactField.setText(studentContactRequiredTip);
            studentDOBField.requestFocus();
            ok = false;
        }
        if (studentCnicField.getText().equals(studentCnicTip) || studentCnicField.getText().equals(studentCnicRequiredTip) || studentCnicField.getText().equals("     -       - ")) {
            setBorderAndForegroundOnMissingValue(studentCnicField);
            studentCnicField.setText(studentCnicRequiredTip);
            studentDOBField.requestFocus();
            ok = false;
        }
        if (studentAddressField.getText().equals(studentAddressTip) || studentAddressField.getText().equals(studentAddressRequiredTip)) {
            setBorderAndForegroundOnMissingValue(studentAddressField);
            studentAddressField.setText(studentAddressRequiredTip);
            studentDOBField.requestFocus();
            ok = false;
        }
        if (guardianNameField.getText().equals(guardianNameTip) || guardianNameField.getText().equals(guardianNameRequiredTip)) {
            setBorderAndForegroundOnMissingValue(guardianNameField);
            guardianNameField.setText(guardianNameRequiredTip);
            studentDOBField.requestFocus();
            ok = false;
        }
        if (guardianRelationField.getText().equals(guardianRelationTip) || guardianRelationField.getText().equals(guardianRelationRequiredTip)) {
            setBorderAndForegroundOnMissingValue(guardianRelationField);
            guardianRelationField.setText(guardianRelationRequiredTip);
            studentDOBField.requestFocus();
            ok = false;

        }
        if (guardianContactField.getText().equals(guardianContactTip) || guardianContactField.getText().equals(guardianContactRequiredTip) || guardianContactField.getText().equals("    -       ")) {
            setBorderAndForegroundOnMissingValue(guardianContactField);
            guardianContactField.setText(guardianContactRequiredTip);
            studentDOBField.requestFocus();
            ok = false;

        }
        if (imageFile == null) {
            studentImageIcon.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            studentDOBField.requestFocus();
            ok = false;
        }

        if (studentReligionCombo.getSelectedIndex() == 0) {
            studentReligionCombo.setBorder(redLineBroder);
            studentDOBField.requestFocus();
            ok = false;
        }
        if (studentNationalityCombo.getSelectedIndex() == 0) {
            studentNationalityCombo.setBorder(redLineBroder);
            studentDOBField.requestFocus();
            ok = false;
        }

        return ok;
    }

    private void addbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtnMouseClicked
        // TODO add your handling code here:
        studentDOBField.requestFocus();
        if (!onUpdate) {
            if (validateForm()) {

                StudentBean student = new StudentBean();
                student.setStudentName(studentNameField.getText());
                student.setSurname(studentSurnameField.getText());
                student.setContact(studentContactField.getText());
                student.setStudentNic(studentCnicField.getText());
                student.setAddress(studentAddressField.getText());
                student.setReligion(studentReligionCombo.getSelectedItem().toString());
                student.setNationality(studentNationalityCombo.getSelectedItem().toString());
                Date dob_date = studentDOBField.getDate();
                String dob_str_date = DateFormatter.formatDate(dob_date);
                student.setDob(dob_str_date);
                if (maleRadio.isSelected()) {
                    student.setGender(maleRadio.getText());
                } else {
                    student.setGender(femaleRadio.getText());
                }

                student.setGuardian(guardianNameField.getText());
                student.setGuardianRelation(guardianRelationField.getText());
                student.setGuardianContact(guardianContactField.getText());

                Date doa_date = new Date();
                String str_doa_date = DateFormatter.formatDate(doa_date);
                student.setAdmissionDate(str_doa_date);

                int mBoardIndx = matricBoardCombo.getSelectedIndex();
                String mBoard = (mBoardIndx == 0) ? "" : matricBoardCombo.getSelectedItem().toString();
                student.setMatricBoard(mBoard);

                Exception exception = null;

                if (!matricMarksField.getText().equals(matricObtMarksTip)) {
                    try {
                        student.setMatricMarks(Integer.parseInt(matricMarksField.getText()));
                    } catch (NumberFormatException nfe) {
                        matricMarksField.setBorder(redLineBroder);
                        matricMarksField.setForeground(Color.RED);
                        matricMarksField.setText(validMarks);
                        System.out.println("Exception " + nfe.getMessage());
                        exception = nfe;
                    }
                }

                if (matricPassYearSpinner.getValue() != 1998 && matricPassYearSpinner.getValue() > 0 && matricPassYearSpinner.getValue() <= 2050) {
                    try {
                        student.setMatricPassYear(Integer.toString(matricPassYearSpinner.getValue()));
                    } catch (NumberFormatException nfe) {
                        System.out.println("Number Format Excption" + nfe.getMessage());
                        exception = nfe;
                    }
                }
                if (!matricSeatNumberField.getText().equals(matricSeatNoTip)) {
                    student.setMatricSeatNumber(matricSeatNumberField.getText());
                }

                int iBoardIndx = interBoardCombo.getSelectedIndex();
                String iBoard = (iBoardIndx == 0) ? "" : interBoardCombo.getSelectedItem().toString();
                student.setInterBoard(iBoard);

                if (!interMarksField.getText().equals(interObtMarksTip)) {
                    try {
                        student.setInterMarks(Integer.parseInt(interMarksField.getText()));
                    } catch (NumberFormatException nfe) {
                        interMarksField.setBorder(this.redLineBroder);
                        interMarksField.setForeground(Color.RED);
                        interMarksField.setText(validMarks);
                        System.out.println("Number Format Excption" + nfe.getMessage());
                        exception = nfe;
                    }
                }
                if (interPassYearSpinner.getValue() != 1998 && interPassYearSpinner.getValue() > 0 && interPassYearSpinner.getValue() <= 2050) {
                    try {
                        student.setInterPassYear(Integer.toString(interPassYearSpinner.getValue()));
                    } catch (NumberFormatException nfe) {
                        System.out.println("Number Format Excption" + nfe.getMessage());
                        exception = nfe;
                    }
                }
                if (!interSeatNumberField.getText().equals(interSeatNoTip)) {
                    student.setInterSeatNumber(interSeatNumberField.getText());
                }
                //If the exception is not generated than...
                if (exception == null) {

                    ImagesHandler imgHandler = new ImagesHandler(this.studentImgDir);
                    //Real Path where the image is currently saved
                    String realImagePath = imgHandler.saveImage(imageFile.getAbsolutePath());
                    student.setPicturePath(realImagePath);

                    student.setCreatedBy(41);
                    student.setCreatedDate(new Date() + "");

                    // How to manage created by and modified by
                    int check = new StudentDaoImpl().addStudent(student);
                    if (check == 1) {
                        clearFields();
                        JOptionPane.showMessageDialog(this,"Student Added");
                        //new MessageForm(this, "Success", "Student Added", "success.png").setVisible(true);
                    }
                }
            }
        } else {
//            new MessageForm("Error", "Record is duplicate", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_addbtnMouseClicked

    private void addbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtnMouseEntered
        // TODO add your handling code here:
        addbtn.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_addbtnMouseEntered

    private void uploadImageBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadImageBtnMouseClicked
        // TODO add your handling code here:
        studentDOBField.requestFocus();
        studentImageIcon.setBorder(null);
        JFileChooser fileChooser = new JFileChooser(searchPath);
        fileChooser.setFileFilter(new CustomFileFilter(new String[]{"png", "jpeg", "jpg"}));
        fileChooser.setMultiSelectionEnabled(false);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int what = fileChooser.showDialog(uploadImageBtn, "Choose Image");

        if (what == JFileChooser.APPROVE_OPTION) {
            imageFile = fileChooser.getSelectedFile();
            searchPath = imageFile.getParent();
            ImageIcon imageIcon = new ImageIcon(imageFile.getAbsolutePath());
            Image scaleImage = imageIcon.getImage().getScaledInstance(220, 180, Image.SCALE_DEFAULT);
            studentImageIcon.setIcon(new ImageIcon(scaleImage));
            this.revalidate();

        }
    }//GEN-LAST:event_uploadImageBtnMouseClicked

    private void guardianNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardianNameFieldActionPerformed
        // TODO add your handling code here:
        guardianRelationField.requestFocus();
    }//GEN-LAST:event_guardianNameFieldActionPerformed

    private void guardianRelationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardianRelationFieldActionPerformed
        // TODO add your handling code here:
        guardianContactField.requestFocus();
    }//GEN-LAST:event_guardianRelationFieldActionPerformed

    private void updatebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseEntered
        // TODO add your handling code here:
        updatebtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_updatebtnMouseEntered

    private void updateStudentRecord() {
        studentDOBField.requestFocus();
        if (validateForm()) {
            StudentBean student = new StudentBean();
            student.setStudentId(sIdOnUpdate);
            student.setStudentName(studentNameField.getText());
            student.setSurname(studentSurnameField.getText());
            student.setContact(studentContactField.getText());
            student.setStudentNic(studentCnicField.getText());
            student.setAddress(studentAddressField.getText());
            student.setReligion(studentReligionCombo.getSelectedItem().toString());
            student.setNationality(studentNationalityCombo.getSelectedItem().toString());
            Date dob_date = studentDOBField.getDate();
            String dob_str_date = DateFormatter.formatDate(dob_date);
            student.setDob(dob_str_date);
            if (maleRadio.isSelected()) {
                student.setGender(maleRadio.getText());
            } else {
                student.setGender(femaleRadio.getText());
            }

            student.setGuardian(guardianNameField.getText());
            student.setGuardianRelation(guardianRelationField.getText());
            student.setGuardianContact(guardianContactField.getText());

            Date doa_date = new Date();
            String str_doa_date = DateFormatter.formatDate(doa_date);
            student.setAdmissionDate(str_doa_date);

            student.setMatricBoard(matricBoardCombo.getSelectedItem().toString());
            if (!matricMarksField.getText().equals(matricObtMarksTip)) {
                try {
                    student.setMatricMarks(Integer.parseInt(matricMarksField.getText()));
                } catch (NumberFormatException nfe) {
                    System.out.println("Exception " + nfe.getMessage());
                }
            }

            if (matricPassYearSpinner.getValue() != 1998 && matricPassYearSpinner.getValue() > 0 && matricPassYearSpinner.getValue() <= 2050) {
                try {
                    student.setMatricPassYear(Integer.toString(matricPassYearSpinner.getValue()));
                } catch (NumberFormatException nfe) {
                    System.out.println("Number Format Excption" + nfe.getMessage());
                }
            }
            if (!matricSeatNumberField.getText().equals(matricSeatNoTip)) {
                student.setMatricSeatNumber(matricSeatNumberField.getText());
            }

            student.setInterBoard(interBoardCombo.getSelectedItem().toString());
            if (!interMarksField.getText().equals(interSeatNoTip)) {
                try {
                    student.setInterMarks(Integer.parseInt(interMarksField.getText()));
                } catch (NumberFormatException nfe) {
                    System.out.println("Number Format Excption" + nfe.getMessage());
                }
            }
            if (interPassYearSpinner.getValue() != 1998 && interPassYearSpinner.getValue() > 0 && interPassYearSpinner.getValue() <= 2050) {
                try {
                    student.setInterPassYear(Integer.toString(interPassYearSpinner.getValue()));
                } catch (NumberFormatException nfe) {
                    System.out.println("Number Format Excption" + nfe.getMessage());
                }
            }
            if (!interSeatNumberField.getText().equals(interSeatNoTip)) {
                student.setInterSeatNumber(interSeatNumberField.getText());
            }

            ImagesHandler imgHandler = new ImagesHandler(this.studentImgDir);
            //Delete the previous image file...
            //If User does not change the picture...
            if (!prevImageFile.getAbsolutePath().equals(imageFile.getAbsolutePath())) {
                imgHandler.deleteFile(prevImageFile.getAbsolutePath());
            }

            //Real Path where the image is currently saved
            String realImagePath = imgHandler.saveImage(imageFile.getAbsolutePath());
            student.setPicturePath(realImagePath);

            student.setModifiedBy(41);
            student.setModifiedDate(new Date() + "");

            // How to manage created by and modified by
            int what = new StudentDaoImpl().updateStudent(student);
            if (what == 1) {
                JOptionPane.showMessageDialog(this,"Student Updated");
                //new MessageForm("Success", "Student Updated", "success.png").setVisible(true);
                clearFields();
                onUpdate = false;
            }
        }

    }
    private void updatebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseClicked
        // TODO add your handling code here:
        if (onUpdate) {
            updateStudentRecord();
        } else {
//            new MessageForm("Error", "Recrod not selected", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_updatebtnMouseClicked

    private void studentNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameFieldActionPerformed
        // TODO add your handling code here:
        studentSurnameField.requestFocus();
    }//GEN-LAST:event_studentNameFieldActionPerformed

    private void studentNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentNameFieldFocusLost
        // TODO add your handling code here:
        if (studentNameField.getText().isEmpty()) {
            setForegroundAndFontOnLost(studentNameField);
            studentNameField.setText(studentNameTip);
        }
    }//GEN-LAST:event_studentNameFieldFocusLost

    private void studentNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentNameFieldFocusGained
        // TODO add your handling code here:
        if (studentNameField.getText().equals(studentNameTip) || studentNameField.getText().equals(studentNameRequiredTip)) {
            studentNameField.setText("");
        }
        setForegroundAndFontOnGain(studentNameField);
    }//GEN-LAST:event_studentNameFieldFocusGained

    private void studentSurnameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentSurnameFieldActionPerformed
        // TODO add your handling code here:
        studentContactField.requestFocus();
    }//GEN-LAST:event_studentSurnameFieldActionPerformed

    private void studentSurnameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentSurnameFieldFocusLost
        // TODO add your handling code here:
        if (studentSurnameField.getText().isEmpty()) {
            setForegroundAndFontOnLost(studentSurnameField);

            studentSurnameField.setText(studentSurnameTip);
        }
    }//GEN-LAST:event_studentSurnameFieldFocusLost

    private void studentSurnameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentSurnameFieldFocusGained
        // TODO add your handling code here:
        if (studentSurnameField.getText().equals(studentSurnameTip) || studentSurnameField.getText().equals(studentSurnameRequiredTip)) {
            studentSurnameField.setText("");
        }
        setForegroundAndFontOnGain(studentSurnameField);
    }//GEN-LAST:event_studentSurnameFieldFocusGained

    private void studentContactFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentContactFieldActionPerformed
        // TODO add your handling code here:
        studentCnicField.requestFocus();
    }//GEN-LAST:event_studentContactFieldActionPerformed

    private void studentContactFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentContactFieldFocusLost
        // TODO add your handling code here:
        if (studentContactField.getText().isEmpty()) {
            setForegroundAndFontOnLost(studentContactField);
            studentContactField.setText(studentContactTip);
        }
    }//GEN-LAST:event_studentContactFieldFocusLost

    private void studentContactFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentContactFieldFocusGained
        // TODO add your handling code here:
        if (studentContactField.getText().equals(studentContactTip) || studentContactField.getText().equals(studentContactRequiredTip)) {
            studentContactField.setText("");
        }
        setForegroundAndFontOnGain(studentContactField);
    }//GEN-LAST:event_studentContactFieldFocusGained

    private void studentAddressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentAddressFieldActionPerformed
        // TODO add your handling code here:
        studentReligionCombo.requestFocus();
    }//GEN-LAST:event_studentAddressFieldActionPerformed

    private void studentAddressFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentAddressFieldFocusLost
        // TODO add your handling code here:
        if (studentAddressField.getText().isEmpty()) {
            setForegroundAndFontOnLost(studentAddressField);
            studentAddressField.setText(studentAddressTip);
            studentDOBField.requestFocus();
        }
    }//GEN-LAST:event_studentAddressFieldFocusLost

    private void studentAddressFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentAddressFieldFocusGained
        // TODO add your handling code here:
        if (studentAddressField.getText().equals(studentAddressTip) || studentAddressField.getText().equals(studentAddressRequiredTip)) {
            studentAddressField.setText("");
        }
        setForegroundAndFontOnGain(studentAddressField);
    }//GEN-LAST:event_studentAddressFieldFocusGained

    private void studentReligionComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentReligionComboFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_studentReligionComboFocusGained

    private void studentCnicFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentCnicFieldActionPerformed
        // TODO add your handling code here:
        studentAddressField.requestFocus();
    }//GEN-LAST:event_studentCnicFieldActionPerformed

    private void studentCnicFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentCnicFieldFocusLost
        // TODO add your handling code here:
        if (studentCnicField.getText().isEmpty()) {
            setForegroundAndFontOnLost(studentCnicField);

            studentCnicField.setText(studentCnicTip);
        }
    }//GEN-LAST:event_studentCnicFieldFocusLost

    private void studentCnicFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentCnicFieldFocusGained
        // TODO add your handling code here:
        if (studentCnicField.getText().equals(studentCnicTip) || studentCnicField.getText().equals(studentCnicRequiredTip)) {
            studentCnicField.setText("");
        }
        setForegroundAndFontOnGain(studentCnicField);
    }//GEN-LAST:event_studentCnicFieldFocusGained

    private void studentNationalityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNationalityComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentNationalityComboActionPerformed

    private void studentNationalityComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentNationalityComboFocusGained
        // TODO add your handling code here:
        studentNationalityCombo.setBorder(noBorder);
    }//GEN-LAST:event_studentNationalityComboFocusGained

    private void studentDOBFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentDOBFieldFocusLost
        // TODO add your handling code here:
        studentReligionCombo.requestFocus();
    }//GEN-LAST:event_studentDOBFieldFocusLost

    private void studentDOBFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentDOBFieldFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_studentDOBFieldFocusGained

    private void femaleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleRadioActionPerformed

    private void matricSeatNumberFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matricSeatNumberFieldFocusLost
        // TODO add your handling code here:
        if (matricSeatNumberField.getText().isEmpty()) {
            setForegroundAndFontOnLost(matricSeatNumberField);
            matricSeatNumberField.setText(matricSeatNoTip);
        }
    }//GEN-LAST:event_matricSeatNumberFieldFocusLost

    private void matricSeatNumberFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matricSeatNumberFieldFocusGained
        // TODO add your handling code here:
        if (matricSeatNumberField.getText().equals(matricSeatNoTip)) {
            matricSeatNumberField.setText("");
        }
        setForegroundAndFontOnGain(matricSeatNumberField);
    }//GEN-LAST:event_matricSeatNumberFieldFocusGained

    private void interSeatNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interSeatNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interSeatNumberFieldActionPerformed

    private void interSeatNumberFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_interSeatNumberFieldFocusLost
        // TODO add your handling code here:
        if (interSeatNumberField.getText().isEmpty()) {
            setForegroundAndFontOnLost(interSeatNumberField);
            interSeatNumberField.setText(interSeatNoTip);
        }
    }//GEN-LAST:event_interSeatNumberFieldFocusLost

    private void interSeatNumberFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_interSeatNumberFieldFocusGained
        // TODO add your handling code here:
        if (interSeatNumberField.getText().equals(interSeatNoTip)) {
            interSeatNumberField.setText("");
        }
        setForegroundAndFontOnGain(interSeatNumberField);
    }//GEN-LAST:event_interSeatNumberFieldFocusGained

    private void interMarksFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_interMarksFieldFocusLost
        // TODO add your handling code here:
        if (interMarksField.getText().isEmpty()) {
            setForegroundAndFontOnLost(interMarksField);
            interMarksField.setText(interObtMarksTip);
        }
    }//GEN-LAST:event_interMarksFieldFocusLost

    private void interMarksFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_interMarksFieldFocusGained
        // TODO add your handling code here:
        if (interMarksField.getText().equals(interObtMarksTip) || interMarksField.getText().equals(validMarks)) {
            interMarksField.setText("");
        }
        setForegroundAndFontOnGain(interMarksField);
    }//GEN-LAST:event_interMarksFieldFocusGained

    private void matricMarksFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matricMarksFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matricMarksFieldActionPerformed

    private void matricMarksFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matricMarksFieldFocusLost
        // TODO add your handling code here:
        if (matricMarksField.getText().isEmpty()) {
            setForegroundAndFontOnLost(matricMarksField);
            matricMarksField.setText(matricObtMarksTip);
        }
    }//GEN-LAST:event_matricMarksFieldFocusLost

    private void matricMarksFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matricMarksFieldFocusGained
        // TODO add your handling code here:
        if (matricMarksField.getText().equals(matricObtMarksTip) || matricMarksField.getText().equals(validMarks)) {
            matricMarksField.setText("");
        }
        setForegroundAndFontOnGain(matricMarksField);

    }//GEN-LAST:event_matricMarksFieldFocusGained

    private void interBoardComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interBoardComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interBoardComboActionPerformed

    private void matricBoardComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matricBoardComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matricBoardComboActionPerformed

    private void showstudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showstudentsMouseClicked
        if (!onUpdate) {
//            new StudentRecordSelectionFrame().setVisible(true);
//            this.dispose();
        }
    }//GEN-LAST:event_showstudentsMouseClicked

    private void resetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseClicked
        clearFields();
    }//GEN-LAST:event_resetBtnMouseClicked

    private void openRecordSelectionFrame() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                StudentRecordSelectionFrame frame = new StudentRecordSelectionFrame();
//                frame.setVisible(true);
            }
        });

        this.dispose();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentAdmissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentAdmissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentAdmissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentAdmissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentAdmissionFrame().setVisible(true);
            }
        });
    }

    private void clearFields() {
        studentNameField.setText(studentNameTip);
        studentSurnameField.setText(studentSurnameTip);
        //studentContactField.setText(studentContactTip);
        //studentCnicField.setText(studentCnicTip);
        studentContactField.setText("");
        studentCnicField.setText("");
        studentAddressField.setText(studentAddressTip);
        studentNationalityCombo.setSelectedIndex(0);
        studentReligionCombo.setSelectedIndex(0);
        genderGroup.clearSelection();
        guardianNameField.setText(guardianNameTip);
        guardianRelationField.setText(guardianRelationTip);
        // guardianContactField.setText(guardianContactTip);
        guardianContactField.setText("");
        matricBoardCombo.setSelectedIndex(0);
        matricMarksField.setText(matricObtMarksTip);
        matricSeatNumberField.setText(matricSeatNoTip);
        interBoardCombo.setSelectedIndex(0);
        interMarksField.setText(interObtMarksTip);
        interSeatNumberField.setText(interSeatNoTip);
        studentImageIcon.setIcon(new ImageIcon(getClass().getResource("/staracademy/com/images/profile_img.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel academicBoardLabel;
    private javax.swing.JLabel academicBoardSecLabel;
    private javax.swing.JLabel academicMarksLabel;
    private javax.swing.JLabel academicMarksSecLabel;
    private javax.swing.JLabel academicMatSeatLabel;
    private javax.swing.JLabel academicPassYearLabel;
    private javax.swing.JLabel academicSeatLabel;
    private javax.swing.JLabel academicSecPassYearLabel;
    private javax.swing.JPanel academicsInfoPanel;
    private javax.swing.JLabel addbtn;
    private javax.swing.JLabel bgLegand;
    private javax.swing.JLabel cross_icon;
    private javax.swing.JRadioButton femaleRadio;
    private javax.swing.JLabel gardianNameLabel;
    private javax.swing.JLabel gardianRelationLabel;
    private javax.swing.JLabel garidanPhoneLabel;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JFormattedTextField guardianContactField;
    private javax.swing.JPanel guardianInfoPanel;
    private javax.swing.JTextField guardianNameField;
    private javax.swing.JTextField guardianRelationField;
    private javax.swing.JLabel header;
    private javax.swing.JPanel imagingPanel;
    private javax.swing.JComboBox<String> interBoardCombo;
    private javax.swing.JTextField interMarksField;
    private com.toedter.calendar.JYearChooser interPassYearSpinner;
    private javax.swing.JTextField interSeatNumberField;
    private com.toedter.components.JLocaleChooser jLocaleChooser1;
    private javax.swing.JRadioButton maleRadio;
    private javax.swing.JComboBox<String> matricBoardCombo;
    private javax.swing.JTextField matricMarksField;
    private com.toedter.calendar.JYearChooser matricPassYearSpinner;
    private javax.swing.JTextField matricSeatNumberField;
    private javax.swing.JLabel resetBtn;
    private javax.swing.JLabel showstudents;
    private javax.swing.JTextField studentAddressField;
    private javax.swing.JLabel studentAddressLabel;
    private javax.swing.JFormattedTextField studentCnicField;
    private javax.swing.JFormattedTextField studentContactField;
    private com.toedter.calendar.JDateChooser studentDOBField;
    private javax.swing.JLabel studentDobLabel;
    private javax.swing.JLabel studentGenderLabel;
    private javax.swing.JLabel studentImageIcon;
    private javax.swing.JPanel studentInfoPanel;
    private javax.swing.JTextField studentNameField;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JComboBox<String> studentNationalityCombo;
    private javax.swing.JLabel studentNationalityLabel;
    private javax.swing.JLabel studentNicLabel;
    private javax.swing.JLabel studentPhoneLabel;
    private javax.swing.JComboBox<String> studentReligionCombo;
    private javax.swing.JLabel studentReligionLabel;
    private javax.swing.JTextField studentSurnameField;
    private javax.swing.JLabel studentSurnameLabel;
    private javax.swing.JLabel updatebtn;
    private javax.swing.JLabel uploadImageBtn;
    // End of variables declaration//GEN-END:variables

    private void hideAllButtons() {
        addbtn.setVisible(false);
        updatebtn.setVisible(false);
    }

    private void checkPermissions() {
//        List<PermissionBean> permissions = new RolePermissionDaoImpl().getAssignedPermissions(LoginFrame.userBean.getRole());
//        for (PermissionBean pb : permissions) {
//            if (pb.getPermission().equals("Add Student")) {
//                addbtn.setVisible(true);
//            }
//            if (pb.getPermission().equals("Update Student")) {
//                updatebtn.setVisible(true);
//            }
//        }
    }
}
