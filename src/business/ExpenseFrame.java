/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package business;

import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import beans.EmployeeBean;
import beans.ExpenseBean;
import beans.ExpenseTypeBean;
import beans.PermissionBean;
import dao.EmployeeDao;
import dao.ExpenseDao;
import dao.ExpenseTypeDao;
import daoimpl.EmployeeDaoImpl;
import daoimpl.ExpenseDaoImpl;
import daoimpl.ExpenseTypeDaoImpl;
import daoimpl.RolePermissionDaoImpl;
import utility.DateFormatter;
import utility.UtilityMethods;

/**
 *
 * @author Javed Ali Dahri
 */
public class ExpenseFrame extends javax.swing.JFrame {

    ExpenseDao expenseDao = new ExpenseDaoImpl();
    ExpenseTypeDao expenseTypeDao = new ExpenseTypeDaoImpl();
    EmployeeDao employeeDao = new EmployeeDaoImpl();
    EmployeeBean employee = null;
    static EmployeeBean user = LoginFrame.userBean;

    public ExpenseFrame() {
        initComponents();
        this.employee = LoginFrame.userBean;
        this.setLocationRelativeTo(null);
        this.setExtendedState(MAXIMIZED_BOTH);
        this.getContentPane().setBackground(Color.white);
        expensetable.getTableHeader().setFont(new Font("Tohoma",Font.BOLD,16));
        expensetable1.getTableHeader().setFont(new Font("Tohoma",Font.BOLD,16));
        expensetable2.getTableHeader().setFont(new Font("Tohoma",Font.BOLD,16));
        hideAllButtons();
        checkPermissions();
        populateExpenseTable1();
        populateExpenseTable2();
        populateExpenseTable3();
        try {
            populateEmployeeCombo();
        } catch (SQLException ex) {
            Logger.getLogger(ExpenseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        populateOwnerCombo();
        populateExpenseCombo();
        employeecombo.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expensetable = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        expenseNameLabel = new javax.swing.JLabel();
        expensetxt = new javax.swing.JTextField();
        amounttxt = new javax.swing.JTextField();
        amountLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        datetxt = new com.toedter.calendar.JDateChooser();
        addlbl = new javax.swing.JLabel();
        updatelbl = new javax.swing.JLabel();
        resetlbl = new javax.swing.JLabel();
        deletelbl = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        expensetable1 = new javax.swing.JTable();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        monthlyExpenseLabel = new javax.swing.JLabel();
        expensecombo = new javax.swing.JComboBox<>();
        employeecombo = new javax.swing.JComboBox<>();
        monthlyEmployeeNameLabel = new javax.swing.JLabel();
        monthlyAmountLabel = new javax.swing.JLabel();
        amounttxt1 = new javax.swing.JTextField();
        datetxt1 = new com.toedter.calendar.JDateChooser();
        monthlyDateLabel = new javax.swing.JLabel();
        updatelbl1 = new javax.swing.JLabel();
        addlbl1 = new javax.swing.JLabel();
        deletelbl1 = new javax.swing.JLabel();
        monthlyResetlbl = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        expensetable2 = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        ownerExpenseNameLabel = new javax.swing.JLabel();
        ownercombo = new javax.swing.JComboBox<>();
        amounttxt2 = new javax.swing.JTextField();
        ownerAmountLabel = new javax.swing.JLabel();
        ownerDateLabel = new javax.swing.JLabel();
        datetxt2 = new com.toedter.calendar.JDateChooser();
        updatelbl2 = new javax.swing.JLabel();
        addlbl2 = new javax.swing.JLabel();
        deletelbl2 = new javax.swing.JLabel();
        ownerResetlbl = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        expenseHeader = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 0));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 255));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTabbedPane1.setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Daily Expenses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 15))); // NOI18N

        expensetable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expensetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Expense Id", "Expense Name", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        expensetable.setRowHeight(20);
        expensetable.setRowMargin(2);
        expensetable.setSelectionBackground(new java.awt.Color(0, 102, 0));
        expensetable.getTableHeader().setResizingAllowed(false);
        expensetable.getTableHeader().setReorderingAllowed(false);
        expensetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expensetableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(expensetable);
        if (expensetable.getColumnModel().getColumnCount() > 0) {
            expensetable.getColumnModel().getColumn(0).setResizable(false);
            expensetable.getColumnModel().getColumn(1).setResizable(false);
            expensetable.getColumnModel().getColumn(2).setResizable(false);
            expensetable.getColumnModel().getColumn(3).setResizable(false);
        }

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        searchLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        searchLabel.setText("Search");

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        expenseNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        expenseNameLabel.setText("Expense Name");
        jPanel9.add(expenseNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 110, 32));

        expensetxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expensetxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel9.add(expensetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 214, 32));

        amounttxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        amounttxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel9.add(amounttxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 214, 32));

        amountLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        amountLabel.setText("Amount ");
        jPanel9.add(amountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 68, 20));

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dateLabel.setText("Date");
        jPanel9.add(dateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 76, 32));

        datetxt.setDateFormatString("dd MMMM yyyy");
        jPanel9.add(datetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 214, 32));

        addlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbtn.png"))); // NOI18N
        addlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addlblMouseClicked(evt);
            }
        });
        jPanel9.add(addlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, 60));

        updatelbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updatebtn.png"))); // NOI18N
        updatelbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updatelbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatelblMouseClicked(evt);
            }
        });
        jPanel9.add(updatelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, -1, 60));

        resetlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/resetbtn.png"))); // NOI18N
        resetlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetlblMouseClicked(evt);
            }
        });
        jPanel9.add(resetlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, -1));

        deletelbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebtn.png"))); // NOI18N
        deletelbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletelbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletelblMouseClicked(evt);
            }
        });
        jPanel9.add(deletelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, 58));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 550));

        jTabbedPane1.addTab("Daily Expenses", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setNextFocusableComponent(addlbl);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, -1, -1));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Monthly Expenses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 15))); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        expensetable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expensetable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Expense Id", "Expense Name", "Employee Name", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        expensetable1.setRowHeight(20);
        expensetable1.setRowMargin(2);
        expensetable1.setSelectionBackground(new java.awt.Color(0, 102, 0));
        expensetable1.getTableHeader().setResizingAllowed(false);
        expensetable1.getTableHeader().setReorderingAllowed(false);
        expensetable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expensetable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(expensetable1);
        if (expensetable1.getColumnModel().getColumnCount() > 0) {
            expensetable1.getColumnModel().getColumn(0).setResizable(false);
            expensetable1.getColumnModel().getColumn(1).setResizable(false);
            expensetable1.getColumnModel().getColumn(2).setResizable(false);
            expensetable1.getColumnModel().getColumn(3).setResizable(false);
            expensetable1.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel7.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 82, 940, 440));

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextField2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });
        jPanel7.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 50, 180, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Search");
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 50, -1, 30));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        monthlyExpenseLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        monthlyExpenseLabel.setText("Expense Name");
        jPanel10.add(monthlyExpenseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 108, 32));

        expensecombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expensecombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Expense Name" }));
        expensecombo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        expensecombo.setFocusable(false);
        expensecombo.setNextFocusableComponent(this);
        expensecombo.setRequestFocusEnabled(false);
        expensecombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                expensecomboItemStateChanged(evt);
            }
        });
        expensecombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                expensecomboFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                expensecomboFocusLost(evt);
            }
        });
        expensecombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expensecomboMouseClicked(evt);
            }
        });
        jPanel10.add(expensecombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 216, 32));

        employeecombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        employeecombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Employee Name" }));
        employeecombo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        employeecombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeecomboMouseClicked(evt);
            }
        });
        jPanel10.add(employeecombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 214, 32));

        monthlyEmployeeNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        monthlyEmployeeNameLabel.setText("Employee Name");
        jPanel10.add(monthlyEmployeeNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 116, 32));

        monthlyAmountLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        monthlyAmountLabel.setText("Amount ");
        jPanel10.add(monthlyAmountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 68, 32));

        amounttxt1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        amounttxt1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel10.add(amounttxt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 214, 32));

        datetxt1.setDateFormatString("dd MMMM yyyy");
        datetxt1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel10.add(datetxt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 214, 32));

        monthlyDateLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        monthlyDateLabel.setText("Date");
        jPanel10.add(monthlyDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 76, 32));

        updatelbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updatebtn.png"))); // NOI18N
        updatelbl1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updatelbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatelbl1MouseClicked(evt);
            }
        });
        jPanel10.add(updatelbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, 60));

        addlbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbtn.png"))); // NOI18N
        addlbl1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addlbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addlbl1MouseClicked(evt);
            }
        });
        jPanel10.add(addlbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, 60));

        deletelbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebtn.png"))); // NOI18N
        deletelbl1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletelbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletelbl1MouseClicked(evt);
            }
        });
        jPanel10.add(deletelbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, 58));

        monthlyResetlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/resetbtn.png"))); // NOI18N
        monthlyResetlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        monthlyResetlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monthlyResetlblMouseClicked(evt);
            }
        });
        jPanel10.add(monthlyResetlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, -1, 58));

        jPanel7.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 380, 440));

        jPanel2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1350, 540));

        jTabbedPane1.addTab("Monthly Expenses", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 269, -1, -1));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Owner Expenses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 15))); // NOI18N

        expensetable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expensetable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Expense Id", "Owner Name", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        expensetable2.setRowHeight(20);
        expensetable2.setRowMargin(2);
        expensetable2.setSelectionBackground(new java.awt.Color(0, 102, 0));
        expensetable2.getTableHeader().setResizingAllowed(false);
        expensetable2.getTableHeader().setReorderingAllowed(false);
        expensetable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expensetable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(expensetable2);
        if (expensetable2.getColumnModel().getColumnCount() > 0) {
            expensetable2.getColumnModel().getColumn(0).setResizable(false);
            expensetable2.getColumnModel().getColumn(1).setResizable(false);
            expensetable2.getColumnModel().getColumn(2).setResizable(false);
            expensetable2.getColumnModel().getColumn(3).setResizable(false);
        }

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextField3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel18.setText("Search");

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        ownerExpenseNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ownerExpenseNameLabel.setText("Owner Name");

        ownercombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ownercombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Owner" }));
        ownercombo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        amounttxt2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        amounttxt2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ownerAmountLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ownerAmountLabel.setText("Amount ");

        ownerDateLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ownerDateLabel.setText("Date");

        datetxt2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        datetxt2.setDateFormatString("dd MMMM yyyy");
        datetxt2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        updatelbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updatebtn.png"))); // NOI18N
        updatelbl2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updatelbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatelbl2MouseClicked(evt);
            }
        });

        addlbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbtn.png"))); // NOI18N
        addlbl2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addlbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addlbl2MouseClicked(evt);
            }
        });

        deletelbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebtn.png"))); // NOI18N
        deletelbl2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletelbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletelbl2MouseClicked(evt);
            }
        });

        ownerResetlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/resetbtn.png"))); // NOI18N
        ownerResetlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ownerResetlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ownerResetlblMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(ownerDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(datetxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ownerAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ownerExpenseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ownercombo, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amounttxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(25, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(addlbl2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updatelbl2))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(deletelbl2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ownerResetlbl)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ownerExpenseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ownercombo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(ownerAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amounttxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datetxt2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ownerDateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addlbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updatelbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deletelbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ownerResetlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap(377, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 907, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(377, 377, 377))
        );

        jPanel4.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(-340, 10, 1700, 490));

        jTabbedPane1.addTab("Owner Expenses", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1370, 590));

        close.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        close.setForeground(new java.awt.Color(255, 255, 255));
        close.setText("X");
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 20, -1, -1));

        expenseHeader.setBackground(new java.awt.Color(0, 102, 0));
        expenseHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        expenseHeader.setForeground(new java.awt.Color(255, 255, 255));
        expenseHeader.setText("                                                                                        EXPENSES");
        expenseHeader.setOpaque(true);
        getContentPane().add(expenseHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 70));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
//        new MainFrame().setVisible(true);
//        this.dispose();
    }//GEN-LAST:event_closeMouseClicked

    private void addlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseClicked
        if (expensetable.getSelectedRow() < 0) {
            if (!expensetxt.getText().isEmpty() && !amounttxt.getText().isEmpty() && datetxt.getDate() != null) {
                ExpenseBean dailyExpense = new ExpenseBean();
                dailyExpense.setExpenseTitle(expensetxt.getText());
                dailyExpense.setExpenseAmount(Double.parseDouble(amounttxt.getText()));
                dailyExpense.setDateOfPayment(DateFormatter.formatDate(datetxt.getDate()) + "");
                dailyExpense.setCreatedBy(user.getEmpId());
                dailyExpense.setCreatedDate(new Timestamp(System.currentTimeMillis()) + "");
                int check = expenseDao.addDailyExpense(dailyExpense);
                if (check == 1) {
                    populateExpenseTable1();
                    clearFields();
                } else {
                    new MessageForm("Error", "Expense not added", "error.png").setVisible(true);
                }
            } else {
                new MessageForm("Error", "Fields are incomplete", "error.png").setVisible(true);
            }
        } else {
            new MessageForm("Error", "Record is duplicate", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_addlblMouseClicked

    private void expensetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expensetableMouseClicked
        ExpenseBean expense = expenseDao.getDailyExpenseById(Integer.parseInt(expensetable.getValueAt(expensetable.getSelectedRow(), 0).toString()));
        expensetxt.setText(expense.getExpenseTitle());
        amounttxt.setText(expense.getExpenseAmount() + "");
        datetxt.setDate(DateFormatter.parseDate(expense.getDateOfPayment()));
    }//GEN-LAST:event_expensetableMouseClicked

    private void deletelblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletelblMouseClicked
        if (expensetable.getSelectedRow() != -1) {
            if (!expensetxt.getText().isEmpty() && !amounttxt.getText().isEmpty() && datetxt.getDate() != null) {
                ExpenseBean dailyExpense = new ExpenseBean();
                dailyExpense.setExpenseId(Integer.parseInt(expensetable.getValueAt(expensetable.getSelectedRow(), 0).toString()));
                dailyExpense.setModifiedBy(user.getEmpId());
                dailyExpense.setModifiedDate(new Timestamp(System.currentTimeMillis()) + "");
                int check = expenseDao.deleteExpense(dailyExpense);
                if (check == 1) {
                    populateExpenseTable1();
                    clearFields();
                } else {
                    new MessageForm("Error", "Expense not deleted", "error.png").setVisible(true);
                }
            }
        } else {
            new MessageForm("Error", "Record not selected", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_deletelblMouseClicked

    private void updatelblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatelblMouseClicked
        if (expensetable.getSelectedRow() != -1) {
            if (!expensetxt.getText().isEmpty() && !amounttxt.getText().isEmpty() && datetxt.getDate() != null) {
                ExpenseBean dailyExpense = new ExpenseBean();
                dailyExpense.setExpenseId(Integer.parseInt(expensetable.getValueAt(expensetable.getSelectedRow(), 0).toString()));
                dailyExpense.setExpenseTitle(expensetxt.getText());
                dailyExpense.setExpenseAmount(Double.parseDouble(amounttxt.getText()));
                dailyExpense.setDateOfPayment(DateFormatter.formatDate(datetxt.getDate()) + "");
                dailyExpense.setModifiedBy(user.getEmpId());
                dailyExpense.setModifiedDate(new Timestamp(System.currentTimeMillis()) + "");
                int check = expenseDao.updateDailyExpense(dailyExpense);
                if (check == 1) {
                    populateExpenseTable1();
                    clearFields();
                } else {
                    new MessageForm("Error", "Expense not added", "error.png").setVisible(true);
                }
            } else {
                new MessageForm("Error", "Fields are incomplete", "error.png").setVisible(true);
            }
        } else {
            new MessageForm("Error", "Record not selected", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_updatelblMouseClicked

    private void updatelbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatelbl1MouseClicked
        if (expensetable1.getSelectedRow() != -1) {
            ExpenseBean monthlyExpense = new ExpenseBean();
            if (expensecombo.getSelectedIndex() > 0 && !amounttxt1.getText().equals("") && datetxt1.getDate() != null) {
                monthlyExpense.setExpenseId(Integer.parseInt(expensetable1.getValueAt(expensetable1.getSelectedRow(), 0).toString()));
                monthlyExpense.setExpenseType(expenseTypeDao.getExpenseTypeByName(expensecombo.getSelectedItem().toString()));
                monthlyExpense.setExpenseAmount(Double.parseDouble(amounttxt1.getText()));
                monthlyExpense.setDateOfPayment(DateFormatter.formatDate(datetxt1.getDate()) + "");
                if (employeecombo.getSelectedIndex() > 0) {
                    monthlyExpense.setEmployee(employeeDao.getEmployeeByName(employeecombo.getSelectedItem().toString()));
                } else {
                    EmployeeBean emp = new EmployeeBean();
                    emp.setEmpId(0);
                    monthlyExpense.setEmployee(emp);
                }
                monthlyExpense.setModifiedBy(user.getEmpId());
                monthlyExpense.setModifiedDate(new Timestamp(System.currentTimeMillis()) + "");
                if (expenseDao.updateMonthlyExpense(monthlyExpense) > 0) {
                    clearFields2();
                    populateExpenseTable2();
                } else {
                    new MessageForm("Error", "Record not updated", "error.png").setVisible(true);
                }
            }
        } else {
            new MessageForm("Error", "Record not selected", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_updatelbl1MouseClicked

    private void deletelbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletelbl1MouseClicked
        if (expensetable1.getSelectedRow() != -1) {
            ExpenseBean monthlyExpense = new ExpenseBean();
            if (expensetable2.getSelectedRow() != -1) {
                monthlyExpense.setExpenseId(Integer.parseInt(expensetable1.getValueAt(expensetable1.getSelectedRow(), 0).toString()));
                monthlyExpense.setModifiedBy(user.getEmpId());
                monthlyExpense.setModifiedDate(new Timestamp(System.currentTimeMillis()) + "");
                int check = expenseDao.deleteExpense(monthlyExpense);
                if (check == 1) {
                    populateExpenseTable2();
                    clearFields2();
                } else {
                    new MessageForm("Error", "Expense not deleted", "error.png").setVisible(true);
                }
            } else {
                new MessageForm("Error", "No record selected", "error.png").setVisible(true);
            }
        } else {
            new MessageForm("Error", "Record not selected", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_deletelbl1MouseClicked

    private void addlbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlbl1MouseClicked
        if (expensetable1.getSelectedRow() < 0) {
            ExpenseBean monthlyExpense = new ExpenseBean();
            if (expensecombo.getSelectedIndex() > 0 && !amounttxt1.getText().equals("") && datetxt1.getDate() != null) {
                monthlyExpense.setExpenseType(expenseTypeDao.getExpenseTypeByName(expensecombo.getSelectedItem().toString()));
                monthlyExpense.setExpenseAmount(Double.parseDouble(amounttxt1.getText()));
                monthlyExpense.setDateOfPayment(DateFormatter.formatDate(datetxt1.getDate()) + "");
                if (employeecombo.getSelectedIndex() > 0) {
                    monthlyExpense.setEmployee(employeeDao.getEmployeeByName(employeecombo.getSelectedItem().toString()));
                } else {
                    EmployeeBean emp = new EmployeeBean();
                    emp.setEmpId(0);
                    monthlyExpense.setEmployee(emp);
                }
                monthlyExpense.setCreatedBy(user.getEmpId());
                monthlyExpense.setCreatedDate(new Timestamp(System.currentTimeMillis()) + "");
                if (expenseDao.addMonthlyExpense(monthlyExpense) > 0) {
                    populateExpenseTable2();
                    clearFields2();
                } else {
                    new MessageForm("Error", "Expense not added", "error.png").setVisible(true);
                }
            } else {
                new MessageForm("Error", "Fill Data fields", "error.png").setVisible(true);
            }
        } else {
            new MessageForm("Error", "Record is duplicate", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_addlbl1MouseClicked

    private void expensecomboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_expensecomboItemStateChanged

    }//GEN-LAST:event_expensecomboItemStateChanged

    private void expensetable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expensetable1MouseClicked
        expensecombo.setSelectedItem(expensetable1.getValueAt(expensetable1.getSelectedRow(), 1));
        if (!(expensetable1.getValueAt(expensetable1.getSelectedRow(), 2).toString()).equals("")) {
            employeecombo.setSelectedItem(expensetable1.getValueAt(expensetable1.getSelectedRow(), 2));
        } else {
            employeecombo.setSelectedIndex(0);
        }
        amounttxt1.setText(expensetable1.getValueAt(expensetable1.getSelectedRow(), 3).toString());
        datetxt1.setDate(DateFormatter.parseDate(expensetable1.getValueAt(expensetable1.getSelectedRow(), 4).toString()));
    }//GEN-LAST:event_expensetable1MouseClicked

    private void expensetable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expensetable2MouseClicked
        ownercombo.setSelectedItem(expensetable2.getValueAt(expensetable2.getSelectedRow(), 1));
        amounttxt2.setText(expensetable2.getValueAt(expensetable2.getSelectedRow(), 2).toString());
        datetxt2.setDate(DateFormatter.parseDate(expensetable2.getValueAt(expensetable2.getSelectedRow(), 3).toString()));
    }//GEN-LAST:event_expensetable2MouseClicked

    private void addlbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlbl2MouseClicked
        if (expensetable2.getSelectedRow() < 0) {
            ExpenseBean ownerExpense = new ExpenseBean();
            if (ownercombo.getSelectedIndex() > 0 && !amounttxt2.getText().equals("") && datetxt2.getDate() != null) {
                ownerExpense.setEmployee(employeeDao.getEmployeeByName(ownercombo.getSelectedItem().toString()));
                ownerExpense.setExpenseAmount(Double.parseDouble(amounttxt2.getText()));
                ownerExpense.setDateOfPayment(DateFormatter.formatDate(datetxt2.getDate()) + "");
                ownerExpense.setCreatedBy(user.getEmpId());
                ownerExpense.setCreatedDate(new Timestamp(System.currentTimeMillis()) + "");
                if (expenseDao.addOwnerExpense(ownerExpense) > 0) {
                    populateExpenseTable3();
                    clearFields3();
                } else {
                    new MessageForm("Error", "Record not added", "error.png").setVisible(true);
                }
            } else {
                new MessageForm("Error", "Fill Data fields", "error.png").setVisible(true);
            }
        } else {
            new MessageForm("Error", "Record is duplicate", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_addlbl2MouseClicked

    private void updatelbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatelbl2MouseClicked
        if (expensetable2.getSelectedRow() != -1) {
            ExpenseBean ownerExpense = new ExpenseBean();
            if (ownercombo.getSelectedIndex() > 0 && !amounttxt2.getText().equals("") && datetxt2.getDate() != null) {
                ownerExpense.setExpenseId(Integer.parseInt(expensetable2.getValueAt(expensetable2.getSelectedRow(), 0).toString()));
                ownerExpense.setEmployee(employeeDao.getEmployeeByName(ownercombo.getSelectedItem().toString()));
                ownerExpense.setExpenseAmount(Double.parseDouble(amounttxt2.getText()));
                ownerExpense.setDateOfPayment(DateFormatter.formatDate(datetxt2.getDate()) + "");
                ownerExpense.setCreatedBy(user.getEmpId());
                ownerExpense.setCreatedDate(new Timestamp(System.currentTimeMillis()) + "");
                if (expenseDao.updateOwnerExpense(ownerExpense) > 0) {
                    populateExpenseTable3();
                    clearFields3();
                } else {
                    new MessageForm("Error", "Record not updated", "error.png").setVisible(true);
                }

            } else {
                new MessageForm("Error", "Fill Data fields", "error.png").setVisible(true);
            }
        } else {
            new MessageForm("Error", "Record not selected", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_updatelbl2MouseClicked

    private void deletelbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletelbl2MouseClicked
        if (expensetable2.getSelectedRow() != -1) {
            ExpenseBean ownerExpense = new ExpenseBean();
            ownerExpense.setExpenseId(Integer.parseInt(expensetable2.getValueAt(expensetable2.getSelectedRow(), 0).toString()));
            ownerExpense.setModifiedBy(user.getEmpId());
            ownerExpense.setModifiedDate(new Timestamp(System.currentTimeMillis()) + "");
            if (expenseDao.deleteExpense(ownerExpense) > 0) {
                populateExpenseTable3();
                clearFields3();
            } else {
                new MessageForm("Error", "Record not deleted", "error.png").setVisible(true);
            }
        } else {
            new MessageForm("Error", "Record not selected", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_deletelbl2MouseClicked

    private void resetlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetlblMouseClicked
        clearFields();
    }//GEN-LAST:event_resetlblMouseClicked

    private void monthlyResetlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthlyResetlblMouseClicked
        clearFields2();
    }//GEN-LAST:event_monthlyResetlblMouseClicked

    private void ownerResetlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ownerResetlblMouseClicked
        clearFields3();
    }//GEN-LAST:event_ownerResetlblMouseClicked

    private void expensecomboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expensecomboMouseClicked

    }//GEN-LAST:event_expensecomboMouseClicked

    private void expensecomboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_expensecomboFocusGained

    }//GEN-LAST:event_expensecomboFocusGained

    private void expensecomboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_expensecomboFocusLost

    }//GEN-LAST:event_expensecomboFocusLost

    private void employeecomboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeecomboMouseClicked
        if ((expensecombo.getSelectedItem().toString()).equalsIgnoreCase("Employee Salary")) {
            employeecombo.setEnabled(true);
        }
    }//GEN-LAST:event_employeecomboMouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        UtilityMethods.searchDataFromTable(expensetable, jTextField1);
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
       UtilityMethods.searchDataFromTable(expensetable1, jTextField2);
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        UtilityMethods.searchDataFromTable(expensetable2, jTextField3);
    }//GEN-LAST:event_jTextField3KeyPressed

    private void populateExpenseTable1() {
        DefaultTableModel dtm = (DefaultTableModel) expensetable.getModel();
        dtm.setRowCount(0);
        List<ExpenseBean> dailyExpense = expenseDao.getAllDailyExpenses();
        if (dailyExpense.size() > 0) {
            for (ExpenseBean eb : dailyExpense) {
                Object[] values = {eb.getExpenseId(), eb.getExpenseTitle(), eb.getExpenseAmount(), eb.getDateOfPayment()};
                dtm.addRow(values);
            }
        }
    }

    private void populateExpenseTable2() {
        DefaultTableModel dtm = (DefaultTableModel) expensetable1.getModel();
        dtm.setRowCount(0);
        List<ExpenseBean> monthlyExpense = expenseDao.getAllMonthlyExpenses();
        if (monthlyExpense.size() > 0) {
            for (ExpenseBean eb : monthlyExpense) {
                Object[] values = {eb.getExpenseId(), eb.getExpenseType().getExpenseTitle(), eb.getEmployee().getEmpName(), eb.getExpenseAmount(), eb.getDateOfPayment()};
                dtm.addRow(values);
            }
        }
    }

    private void populateExpenseTable3() {
        DefaultTableModel dtm = (DefaultTableModel) expensetable2.getModel();
        dtm.setRowCount(0);
        List<ExpenseBean> ownerExpense = expenseDao.getAllOwnerExpenses();
        if (ownerExpense.size() > 0) {
            for (ExpenseBean eb : ownerExpense) {
                Object[] values = {eb.getExpenseId(), eb.getEmployee().getEmpName(), eb.getExpenseAmount(), eb.getDateOfPayment()};
                dtm.addRow(values);
            }
        }
    }

    private void populateExpenseCombo() {
        List<ExpenseTypeBean> expenses = new ExpenseTypeDaoImpl().getAllExpenseTypes();
        if (expenses.size() > 0) {
            expensecombo.removeAllItems();
            expensecombo.addItem("Select Expense Name");
            for (ExpenseTypeBean etb : expenses) {
                expensecombo.addItem(etb.getExpenseTitle());
            }
        }
    }

    private void populateEmployeeCombo() throws SQLException {
        ResultSet employees = new EmployeeDaoImpl().getAllEmployees();
        employeecombo.removeAllItems();
        employeecombo.addItem("Select Employee Name");
        while (employees.next()) {
            employeecombo.addItem(employees.getString("emp_name"));
        }
    }

    private void populateOwnerCombo() {
        List<EmployeeBean> owners = employeeDao.getAllOwners();
        if (owners.size() > 0) {
            ownercombo.removeAllItems();
            ownercombo.addItem("Select owner");
            for (EmployeeBean emp : owners) {
                ownercombo.addItem(emp.getEmpName());
            }
        }
    }

    private void clearFields() {
        expensetxt.setText("");
        amounttxt.setText("");
        datetxt.setDate(null);
        expensetable.clearSelection();
    }

    private void clearFields2() {
        expensecombo.setSelectedIndex(0);
        employeecombo.setSelectedIndex(0);
        amounttxt1.setText("");
        datetxt1.setDate(null);
        expensetable1.clearSelection();
        employeecombo.setEnabled(false);
    }

    private void clearFields3() {
        ownercombo.setSelectedIndex(0);
        amounttxt2.setText("");
        datetxt2.setDate(null);
        expensetable2.clearSelection();
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpenseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpenseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpenseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpenseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpenseFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addlbl;
    private javax.swing.JLabel addlbl1;
    private javax.swing.JLabel addlbl2;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField amounttxt;
    private javax.swing.JTextField amounttxt1;
    private javax.swing.JTextField amounttxt2;
    private javax.swing.JLabel close;
    private javax.swing.JLabel dateLabel;
    private com.toedter.calendar.JDateChooser datetxt;
    private com.toedter.calendar.JDateChooser datetxt1;
    private com.toedter.calendar.JDateChooser datetxt2;
    private javax.swing.JLabel deletelbl;
    private javax.swing.JLabel deletelbl1;
    private javax.swing.JLabel deletelbl2;
    private javax.swing.JComboBox<String> employeecombo;
    private javax.swing.JLabel expenseHeader;
    private javax.swing.JLabel expenseNameLabel;
    private javax.swing.JComboBox<String> expensecombo;
    private javax.swing.JTable expensetable;
    private javax.swing.JTable expensetable1;
    private javax.swing.JTable expensetable2;
    private javax.swing.JTextField expensetxt;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel monthlyAmountLabel;
    private javax.swing.JLabel monthlyDateLabel;
    private javax.swing.JLabel monthlyEmployeeNameLabel;
    private javax.swing.JLabel monthlyExpenseLabel;
    private javax.swing.JLabel monthlyResetlbl;
    private javax.swing.JLabel ownerAmountLabel;
    private javax.swing.JLabel ownerDateLabel;
    private javax.swing.JLabel ownerExpenseNameLabel;
    private javax.swing.JLabel ownerResetlbl;
    private javax.swing.JComboBox<String> ownercombo;
    private javax.swing.JLabel resetlbl;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel updatelbl;
    private javax.swing.JLabel updatelbl1;
    private javax.swing.JLabel updatelbl2;
    // End of variables declaration//GEN-END:variables

    private void hideAllButtons() {
        addlbl.setVisible(false);
        addlbl1.setVisible(false);
        addlbl2.setVisible(false);
        updatelbl.setVisible(false);
        updatelbl1.setVisible(false);
        updatelbl2.setVisible(false);
        deletelbl.setVisible(false);
        deletelbl1.setVisible(false);
        deletelbl2.setVisible(false);
    }

    private void checkPermissions() {
        List<PermissionBean> permissions = new RolePermissionDaoImpl().getAssignedPermissions(LoginFrame.userBean.getRole());
        for (PermissionBean pb : permissions) {
            if (pb.getPermission().equals("Add Expenses")) {
                addlbl.setVisible(true);
                addlbl1.setVisible(true);
                addlbl2.setVisible(true);
            }
            if (pb.getPermission().equals("Update Expenses")) {
                updatelbl.setVisible(true);
                updatelbl1.setVisible(true);
                updatelbl2.setVisible(true);
            }
            if (pb.getPermission().equals("Delete Expenses")) {
                deletelbl.setVisible(true);
                deletelbl1.setVisible(true);
                deletelbl2.setVisible(true);
            }
        }
    }
}
