/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package business;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import beans.ShiftBean;
import daoimpl.ShiftDaoImpl;
import utility.UtilityMethods;
import beans.PermissionBean;
import daoimpl.RolePermissionDaoImpl;
import java.util.List;

/**
 *
 * @author Bilal Bhatti
 */
public class ShiftFrame extends javax.swing.JFrame {

    private static final String shiftNameTip = "Shift Name e.g[Morning Class 1]";
    private static final String searchTip = "Search by keyword";
    private static final String shiftNameRequiredTip = "Shift Name Is Required";
    private DefaultTableModel shiftTableModel;
    private Color fg_color_on_focus_lost = new Color(153, 153, 153);
    private Font font_on_focus_lost = new Font("Century Gothic", Font.PLAIN, 18);
    private Color fg_color_on_focus_gain = new Color(120, 120, 120);
    private Font font_on_focus_gain = new Font("Tahoma", Font.PLAIN, 18);

    /**
     * Creates new form ShiftFrame
     */
    public ShiftFrame() {
        this.setUndecorated(true);
        this.getContentPane().setBackground(Color.white);
        initComponents();
        hideAllButtons();
        checkPermissions();
        shiftTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 16));
        shiftTableModel = (DefaultTableModel) shiftTable.getModel();
        refreshTable();

        startTimeCombo.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        table_panel = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        tableScrollPanel = new javax.swing.JScrollPane();
        shiftTable = new javax.swing.JTable();
        searchLabel = new javax.swing.JLabel();
        shift_frame_bg = new javax.swing.JLabel();
        data_entry_panel = new javax.swing.JPanel();
        addlbl = new javax.swing.JLabel();
        deletelbl = new javax.swing.JLabel();
        updatelbl = new javax.swing.JLabel();
        resetlbl = new javax.swing.JLabel();
        endTimeCombo = new javax.swing.JComboBox<>();
        startTimeCombo = new javax.swing.JComboBox<>();
        shiftTitleField = new javax.swing.JTextField();
        shiftStartLabel = new javax.swing.JLabel();
        shiftNameLabel = new javax.swing.JLabel();
        shiftEndLabel = new javax.swing.JLabel();
        cross_icon = new javax.swing.JLabel();
        shiftHeader = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table_panel.setBackground(new java.awt.Color(255, 255, 255));
        table_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        searchField.setForeground(new java.awt.Color(153, 153, 153));
        searchField.setText("Search by keyword");
        searchField.setToolTipText("Search Field");
        searchField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFieldFocusLost(evt);
            }
        });
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });
        table_panel.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, 230, 40));

        shiftTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        shiftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Shift Title", "Start Time", "End Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        shiftTable.setToolTipText("Shifts Table");
        shiftTable.setGridColor(new java.awt.Color(153, 153, 153));
        shiftTable.setRowHeight(20);
        shiftTable.setRowMargin(2);
        shiftTable.setSelectionBackground(new java.awt.Color(0, 102, 0));
        shiftTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        shiftTable.getTableHeader().setResizingAllowed(false);
        shiftTable.getTableHeader().setReorderingAllowed(false);
        shiftTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shiftTableMouseClicked(evt);
            }
        });
        tableScrollPanel.setViewportView(shiftTable);

        table_panel.add(tableScrollPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 880, 590));

        searchLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        searchLabel.setText("Search");
        table_panel.add(searchLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 0, 60, 40));

        getContentPane().add(table_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 880, 640));
        getContentPane().add(shift_frame_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -70, -1, 900));

        data_entry_panel.setBackground(new java.awt.Color(255, 255, 255));
        data_entry_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        data_entry_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbtn.png"))); // NOI18N
        addlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addlblMouseEntered(evt);
            }
        });
        data_entry_panel.add(addlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 170, 60));

        deletelbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebtn.png"))); // NOI18N
        deletelbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletelblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deletelblMouseEntered(evt);
            }
        });
        data_entry_panel.add(deletelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 170, 60));

        updatelbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updatebtn.png"))); // NOI18N
        updatelbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatelblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatelblMouseEntered(evt);
            }
        });
        data_entry_panel.add(updatelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 170, 60));

        resetlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/resetbtn.png"))); // NOI18N
        resetlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetlblMouseClicked(evt);
            }
        });
        data_entry_panel.add(resetlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 430, 170, 60));

        endTimeCombo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        endTimeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Shift End Time", "7:00 AM", "8:00 AM", "9:00 AM", "10:00 AM", "11:00 AM", "12:00 PM", "1:00 PM", "2:00 PM", "3:00 PM", "4:00 PM", "5:00 PM", "6:00 PM", "7:00 PM", "8:00 PM", "9:00 PM", "10:00 PM", "11:00 PM" }));
        endTimeCombo.setToolTipText("Shift End Time");
        endTimeCombo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        endTimeCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                endTimeComboItemStateChanged(evt);
            }
        });
        data_entry_panel.add(endTimeCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 290, 40));

        startTimeCombo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        startTimeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Shift Starting Time", "7:00 AM", "8:00 AM", "9:00 AM", "10:00 AM", "11:00 AM", "12:00 PM", "1:00 PM", "2:00 PM", "3:00 PM", "4:00 PM", "5:00 PM", "6:00 PM", "7:00 PM", "8:00 PM", "9:00 PM", "10:00 PM", "11:00 PM" }));
        startTimeCombo.setToolTipText("Shift Start Time");
        startTimeCombo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        startTimeCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                startTimeComboItemStateChanged(evt);
            }
        });
        data_entry_panel.add(startTimeCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 290, 40));

        shiftTitleField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        shiftTitleField.setText("Shift Name e.g[Morning Class 1]");
        shiftTitleField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        shiftTitleField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                shiftTitleFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                shiftTitleFieldFocusLost(evt);
            }
        });
        data_entry_panel.add(shiftTitleField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 290, 40));

        shiftStartLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        shiftStartLabel.setText("Start Time");
        data_entry_panel.add(shiftStartLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 100, 40));

        shiftNameLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        shiftNameLabel.setText("Shift Name");
        data_entry_panel.add(shiftNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 100, 40));

        shiftEndLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        shiftEndLabel.setText("End Time");
        data_entry_panel.add(shiftEndLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 100, 40));

        getContentPane().add(data_entry_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 440, 590));

        cross_icon.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cross_icon.setForeground(new java.awt.Color(255, 255, 255));
        cross_icon.setText("X");
        cross_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cross_iconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cross_iconMouseEntered(evt);
            }
        });
        getContentPane().add(cross_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 20, 20, 30));

        shiftHeader.setBackground(new java.awt.Color(0, 102, 0));
        shiftHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        shiftHeader.setForeground(new java.awt.Color(255, 255, 255));
        shiftHeader.setText("                                                                                           SHIFT");
        shiftHeader.setOpaque(true);
        getContentPane().add(shiftHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 0, 1370, 70));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseEntered
        // TODO add your handling code here:
        addlbl.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_addlblMouseEntered

    private void deletelblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletelblMouseEntered
        // TODO add your handling code here:
        deletelbl.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_deletelblMouseEntered

    private void updatelblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatelblMouseEntered
        // TODO add your handling code here:
        updatelbl.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_updatelblMouseEntered

    private void shiftTitleFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shiftTitleFieldFocusGained
        // TODO add your handling code here:
        shiftTitleField.setText("");

    }//GEN-LAST:event_shiftTitleFieldFocusGained

    private void shiftTitleFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shiftTitleFieldFocusLost
        // TODO add your handling code here:
        if (shiftTitleField.getText().isEmpty()) {
            shiftTitleField.setForeground(new Color(153, 153, 153));
            shiftTitleField.setFont(new Font("Century Gothic", Font.PLAIN, 18));
            shiftTitleField.setText(shiftNameTip);
        }
    }//GEN-LAST:event_shiftTitleFieldFocusLost

    private boolean validateForm() {
        boolean ok = true;

        if (shiftTitleField.getText().equals(shiftNameTip) || shiftTitleField.getText().equals(shiftNameRequiredTip)) {
            shiftTitleField.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            shiftTitleField.setForeground(Color.RED);
            shiftTitleField.setText(shiftNameRequiredTip);
            searchField.requestFocus();
            ok = false;
        }
        if (startTimeCombo.getSelectedIndex() == 0) {
            startTimeCombo.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            searchField.requestFocus();
            ok = false;
        }
        if (endTimeCombo.getSelectedIndex() == 0) {
            endTimeCombo.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            searchField.requestFocus();
            ok = false;
        }

        return ok;
    }

    private void addlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseClicked
        // TODO add your handling code here:
        int what = JOptionPane.showConfirmDialog(addlbl, "Do You Want To Add This Record", "Confirmation Dialog", JOptionPane.OK_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (what == JOptionPane.OK_OPTION && validateForm()) {

            ShiftBean shift = new ShiftBean();
            shift.setShiftName(shiftTitleField.getText());
            shift.setStartTime(startTimeCombo.getSelectedItem().toString());
            shift.setEndTime(endTimeCombo.getSelectedItem().toString());
            shift.setCreatedBy(41);
            shift.setCreatedDate(new Date() + "");

            int response = new ShiftDaoImpl().addShift(shift);

            if (response == 1) {
                JOptionPane.showMessageDialog(this, "Record Successfully Added");
                refreshTable();
                refreshInputFields();
            }

        }
    }//GEN-LAST:event_addlblMouseClicked

    private void deletelblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletelblMouseClicked
        // TODO add your handling code here:
        int selectedRow = shiftTable.getSelectedRow();
        ShiftBean shift = new ShiftBean();

        int id = Integer.parseInt(shiftTable.getValueAt(selectedRow, 0).toString());

        shift.setShiftId(id);
        shift.setModifiedBy(11);
        shift.setModifiedDate(new Date() + "");

        //Remove this shift form table
        int what = new ShiftDaoImpl().deleteShift(shift);
        if (what == 1) {
            JOptionPane.showMessageDialog(deletelbl, "Record Has Been Successfully Deleted", "Record Deleted", JOptionPane.INFORMATION_MESSAGE);
        }
        //Refresh Input Fields...
        refreshInputFields();
        //Refresh Table...
        refreshTable();


    }//GEN-LAST:event_deletelblMouseClicked

    private void updatelblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatelblMouseClicked
        // TODO add your handling code here:
        int selectedRow = shiftTable.getSelectedRow();
        ShiftBean shift = new ShiftBean();

        int id = Integer.parseInt(shiftTable.getValueAt(selectedRow, 0).toString());
        shift.setShiftId(id);

        //Setting new shift name, start time, end time
        shift.setShiftName(shiftTitleField.getText());
        shift.setStartTime(startTimeCombo.getSelectedItem().toString());
        shift.setEndTime(endTimeCombo.getSelectedItem().toString());

        shift.setModifiedBy(11);
        shift.setModifiedDate(new Date() + "");

        int response = new ShiftDaoImpl().updateShift(shift);
        if (response == 1) {
            JOptionPane.showMessageDialog(updatelbl, "Record Has Been Successfully Updated", "Record Updated", JOptionPane.INFORMATION_MESSAGE);
            //refresh input fields
            refreshInputFields();
            //refresh table
            refreshTable();
        }
    }//GEN-LAST:event_updatelblMouseClicked


    private void startTimeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_startTimeComboItemStateChanged
        startTimeCombo.setBorder(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_startTimeComboItemStateChanged

    private void endTimeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_endTimeComboItemStateChanged
        endTimeCombo.setBorder(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_endTimeComboItemStateChanged

    private void cross_iconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cross_iconMouseEntered
        // TODO add your handling code here:
        cross_icon.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_cross_iconMouseEntered

    private void cross_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cross_iconMouseClicked
        new MainFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cross_iconMouseClicked

    private void resetlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetlblMouseClicked
        clearFields();
    }//GEN-LAST:event_resetlblMouseClicked

    private void shiftTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shiftTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = shiftTable.getSelectedRow();
        shiftTitleField.setText(shiftTableModel.getValueAt(selectedRow, 1).toString());
        startTimeCombo.setSelectedItem(shiftTableModel.getValueAt(selectedRow, 2));
        endTimeCombo.setSelectedItem(shiftTableModel.getValueAt(selectedRow, 3));

    }//GEN-LAST:event_shiftTableMouseClicked

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        UtilityMethods.searchDataFromTable(shiftTable, searchField);
    }//GEN-LAST:event_searchFieldKeyReleased

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusLost
        // TODO add your handling code here:
        if (searchField.getText().isEmpty()) {
            searchField.setForeground(fg_color_on_focus_lost);
            searchField.setFont(font_on_focus_lost);
            searchField.setText(searchTip);
        }
    }//GEN-LAST:event_searchFieldFocusLost

    private void searchFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusGained
        // TODO add your handling code here:
        if (searchField.getText().equals(searchTip)) {
            searchField.setText("");
        }


    }//GEN-LAST:event_searchFieldFocusGained

    private void refreshInputFields() {
        shiftTitleField.setText(shiftNameTip);
        startTimeCombo.setSelectedIndex(0);
        endTimeCombo.setSelectedIndex(0);
    }

    private void clearFields() {
        shiftTitleField.setText(searchTip);
        startTimeCombo.setSelectedIndex(0);
        endTimeCombo.setSelectedIndex(0);
        shiftTable.clearSelection();
    }

    private void refreshTable() {
        //removel all the previous rows...
        shiftTableModel.setNumRows(0);

        shiftTable.getColumnModel().getColumn(0).setWidth(0);
        shiftTable.getColumnModel().getColumn(0).setMinWidth(0);
        shiftTable.getColumnModel().getColumn(0).setMaxWidth(0);

        ResultSet rs = new ShiftDaoImpl().getAllShifts();
        try {
            ShiftBean shift;
            while (rs.next()) {
                shift = new ShiftBean();
                shift.setShiftId(rs.getInt("shift_id"));
                shift.setShiftName(rs.getString("shift_title"));
                shift.setStartTime(rs.getString("start_time"));
                shift.setEndTime(rs.getString("end_time"));

                shiftTableModel.addRow(new Object[]{
                    shift.getShiftId(),
                    shift.getShiftName(),
                    shift.getStartTime(),
                    shift.getEndTime()});

            }
        } catch (SQLException sqle) {
            System.out.println("Exception is Shift Frame in refreshShiftListFromDB() Method...");
            System.out.println(sqle.getMessage());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShiftFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShiftFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShiftFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShiftFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShiftFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addlbl;
    private javax.swing.JLabel cross_icon;
    private javax.swing.JPanel data_entry_panel;
    private javax.swing.JLabel deletelbl;
    private javax.swing.JComboBox<String> endTimeCombo;
    private javax.swing.JLabel resetlbl;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel shiftEndLabel;
    private javax.swing.JLabel shiftHeader;
    private javax.swing.JLabel shiftNameLabel;
    private javax.swing.JLabel shiftStartLabel;
    private javax.swing.JTable shiftTable;
    private javax.swing.JTextField shiftTitleField;
    private javax.swing.JLabel shift_frame_bg;
    private javax.swing.JComboBox<String> startTimeCombo;
    private javax.swing.JScrollPane tableScrollPanel;
    private javax.swing.JPanel table_panel;
    private javax.swing.JLabel updatelbl;
    // End of variables declaration//GEN-END:variables

    private void hideAllButtons() {
        addlbl.setVisible(false);
        updatelbl.setVisible(false);
        deletelbl.setVisible(false);
    }

    private void checkPermissions() {
        List<PermissionBean> permissions = new RolePermissionDaoImpl().getAssignedPermissions(LoginFrame.userBean.getRole());
        for (PermissionBean pb : permissions) {
            if (pb.getPermission().equals("add")) {
                addlbl.setVisible(true);
            }
            if (pb.getPermission().equals("update")) {
                updatelbl.setVisible(true);
            }
            if (pb.getPermission().equals("delete")) {
                deletelbl.setVisible(true);
            }
        }
    }

}
