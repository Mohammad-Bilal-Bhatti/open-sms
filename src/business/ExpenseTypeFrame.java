/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package business;

import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import beans.EmployeeBean;
import beans.ExpenseTypeBean;
import beans.PermissionBean;
import dao.ExpenseTypeDao;
import daoimpl.ExpenseTypeDaoImpl;
import daoimpl.RolePermissionDaoImpl;
import utility.CurrentDate;
import utility.UtilityMethods;

/**
 *
 * @author Amjad Ali Dahri
 */
public class ExpenseTypeFrame extends javax.swing.JFrame {

    /**
     * Creates new form ExpenseTypeFrame
     */
    EmployeeBean emp = null;
    ExpenseTypeDao expenseTypeDao = new ExpenseTypeDaoImpl();

    public ExpenseTypeFrame() {
        initComponents();
        this.getContentPane().setBackground(Color.white);
        this.emp = LoginFrame.userBean;
        Toolkit t = Toolkit.getDefaultToolkit();
        this.setSize(t.getScreenSize().width, t.getScreenSize().height);
        this.setLocationRelativeTo(null);
        expensetypetable.getTableHeader().setFont(new Font("Tahoma",Font.BOLD,16));
        hideAllButtons();
        checkPermissions();
        populateExpTypeTable();
        clearFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cutlbl = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        exptypetxt = new javax.swing.JTextField();
        addlbl = new javax.swing.JLabel();
        updatelbl = new javax.swing.JLabel();
        deletelbl = new javax.swing.JLabel();
        resetlbl = new javax.swing.JLabel();
        expenseTypeLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expensetypetable = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        expenseHeader = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cutlbl.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cutlbl.setForeground(new java.awt.Color(255, 255, 255));
        cutlbl.setText("X");
        cutlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cutlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cutlblMouseClicked(evt);
            }
        });
        getContentPane().add(cutlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 20, 20, 30));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exptypetxt.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        exptypetxt.setText("Enter expense type here");
        exptypetxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        exptypetxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                exptypetxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                exptypetxtFocusLost(evt);
            }
        });
        exptypetxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exptypetxtMouseClicked(evt);
            }
        });
        jPanel1.add(exptypetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 200, 40));

        addlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbtn.png"))); // NOI18N
        addlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addlblMouseClicked(evt);
            }
        });
        jPanel1.add(addlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 170, 170, 50));

        updatelbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updatebtn.png"))); // NOI18N
        updatelbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updatelbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatelblMouseClicked(evt);
            }
        });
        jPanel1.add(updatelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 170, 170, 50));

        deletelbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebtn.png"))); // NOI18N
        deletelbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletelbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletelblMouseClicked(evt);
            }
        });
        jPanel1.add(deletelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 230, -1, -1));

        resetlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/resetbtn.png"))); // NOI18N
        resetlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetlblMouseClicked(evt);
            }
        });
        jPanel1.add(resetlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 230, 160, -1));

        expenseTypeLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        expenseTypeLabel.setText("Expense Type");
        jPanel1.add(expenseTypeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 120, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 340, 530));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        expensetypetable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        expensetypetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ExpenseType Id", "Expense Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        expensetypetable.setRowHeight(20);
        expensetypetable.setRowMargin(3);
        expensetypetable.setSelectionBackground(new java.awt.Color(0, 102, 0));
        expensetypetable.getTableHeader().setResizingAllowed(false);
        expensetypetable.getTableHeader().setReorderingAllowed(false);
        expensetypetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expensetypetableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(expensetypetable);
        if (expensetypetable.getColumnModel().getColumnCount() > 0) {
            expensetypetable.getColumnModel().getColumn(0).setResizable(false);
            expensetypetable.getColumnModel().getColumn(1).setResizable(false);
        }

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        searchLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        searchLabel.setText("Search");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 1000, 570));

        expenseHeader.setBackground(new java.awt.Color(0, 102, 0));
        expenseHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        expenseHeader.setForeground(new java.awt.Color(255, 255, 255));
        expenseHeader.setText("                                                                                       EXPENSE TYPE");
        expenseHeader.setOpaque(true);
        getContentPane().add(expenseHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 70));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cutlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cutlblMouseClicked
        new MainFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cutlblMouseClicked

    private void exptypetxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exptypetxtFocusGained
        if (exptypetxt.getText().equalsIgnoreCase("Enter expense type here")) {
            exptypetxt.setText("");
        }
    }//GEN-LAST:event_exptypetxtFocusGained

    private void exptypetxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exptypetxtFocusLost
        if (exptypetxt.getText().isEmpty()) {
            exptypetxt.setText("Enter expense type here");
        }
    }//GEN-LAST:event_exptypetxtFocusLost

    private void addlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseClicked
        if (expensetypetable.getSelectedRow() == -1) {
            ExpenseTypeBean expenseTypeBean = new ExpenseTypeBean();
            if (!exptypetxt.getText().equals("") && !exptypetxt.getText().equals("Enter expense type here")) {
                expenseTypeBean.setExpenseTitle(exptypetxt.getText());
                expenseTypeBean.setCreatedBy(emp.getEmpId());
                expenseTypeBean.setCreatedDate(CurrentDate.getCurrentDate() + "");
                if (expenseTypeDao.addExpenseType(expenseTypeBean) > 0) {
                    populateExpTypeTable();
                    clearFields();
                } else {
                    new MessageForm("Error", "Expense Type not added", "error.png").setVisible(true);
                }
            }
        } else {
            new MessageForm("Error", "Record is duplicate", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_addlblMouseClicked

    private void updatelblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatelblMouseClicked
        if (expensetypetable.getSelectedRow() != -1) {
            ExpenseTypeBean expenseTypeBean = new ExpenseTypeBean();
            expenseTypeBean.setExpenseTypeId(Integer.parseInt(expensetypetable.getValueAt(expensetypetable.getSelectedRow(), 0).toString()));
            if (!exptypetxt.getText().isEmpty() && !exptypetxt.getText().equals("Enter expense type here")) {
                expenseTypeBean.setExpenseTitle(exptypetxt.getText());
                expenseTypeBean.setModifiedBy(emp.getEmpId());
                expenseTypeBean.setModifiedDate(CurrentDate.getCurrentDate() + "");
                if (expenseTypeDao.updateExpenseType(expenseTypeBean) > 0) {
                    populateExpTypeTable();
                    clearFields();
                } else {
                    new MessageForm("Error", "Expense Type not updated", "error.png").setVisible(true);
                }
            }
        } else {
            new MessageForm("Error", "Record not selected", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_updatelblMouseClicked

    private void expensetypetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expensetypetableMouseClicked
        exptypetxt.setText(expensetypetable.getValueAt(expensetypetable.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_expensetypetableMouseClicked

    private void deletelblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletelblMouseClicked
        if (expensetypetable.getSelectedRow() != -1) {
            ExpenseTypeBean expenseTypeBean = new ExpenseTypeBean();
            expenseTypeBean.setExpenseTypeId(Integer.parseInt(expensetypetable.getValueAt(expensetypetable.getSelectedRow(), 0).toString()));
            expenseTypeBean.setModifiedBy(emp.getEmpId());
            expenseTypeBean.setModifiedDate(CurrentDate.getCurrentDate() + "");
            if (expenseTypeDao.deleteExpenseType(expenseTypeBean) > 0) {
                populateExpTypeTable();
                clearFields();
            } else {
                new MessageForm("Error", "Expense Type not deleted", "error.png").setVisible(true);
            }
        } else {
            new MessageForm("Error", "Record not selected", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_deletelblMouseClicked

    private void exptypetxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exptypetxtMouseClicked
        if (exptypetxt.getText().equals("Enter expense type here")) {
            exptypetxt.setText("");
        }
    }//GEN-LAST:event_exptypetxtMouseClicked

    private void resetlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetlblMouseClicked
        clearFields();
        expensetypetable.clearSelection();
    }//GEN-LAST:event_resetlblMouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        UtilityMethods.searchDataFromTable(expensetypetable, jTextField1);
    }//GEN-LAST:event_jTextField1KeyPressed

    private void populateExpTypeTable() {
        DefaultTableModel dtm = (DefaultTableModel) expensetypetable.getModel();
        dtm.setRowCount(0);
        List<ExpenseTypeBean> expenseTypes = expenseTypeDao.getAllExpenseTypes();
        for (ExpenseTypeBean etb : expenseTypes) {
            Object[] values = {etb.getExpenseTypeId(), etb.getExpenseTitle()};
            dtm.addRow(values);
        }
    }

    private void clearFields() {
        exptypetxt.setText("Enter expense type here");
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpenseTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpenseTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpenseTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpenseTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpenseTypeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addlbl;
    private javax.swing.JLabel cutlbl;
    private javax.swing.JLabel deletelbl;
    private javax.swing.JLabel expenseHeader;
    private javax.swing.JLabel expenseTypeLabel;
    private javax.swing.JTable expensetypetable;
    private javax.swing.JTextField exptypetxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel resetlbl;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel updatelbl;
    // End of variables declaration//GEN-END:variables

    private void hideAllButtons() {
        addlbl.setVisible(false);
        updatelbl.setVisible(false);
        deletelbl.setVisible(false);
    }

    private void checkPermissions() {
        List<PermissionBean> permissions = new RolePermissionDaoImpl().getAssignedPermissions(LoginFrame.userBean.getRole());
        for (PermissionBean pb : permissions) {
            if (pb.getPermission().equalsIgnoreCase("add")) {
                addlbl.setVisible(true);
            }
            if (pb.getPermission().equalsIgnoreCase("update")) {
                updatelbl.setVisible(true);
            }
            if (pb.getPermission().equalsIgnoreCase("delete")) {
                deletelbl.setVisible(true);
            }
        }
    }
}
