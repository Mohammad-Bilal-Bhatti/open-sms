/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package business;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.BevelBorder;
import javax.swing.table.DefaultTableModel;
import beans.EmployeeBean;
import beans.RoleBean;
import daoimpl.EmployeeDaoImpl;
import daoimpl.RoleDaoImpl;
import utility.UtilityMethods;

/**
 *
 * @author Bilal Bhatti
 */
public class EmployeeRecordSelectionFrame extends javax.swing.JFrame {

    private static final String searchTip = "Search By Keyword";
    private DefaultTableModel tableModel;

    /**
     * Creates new form EmployeeRecordSelectionFrame
     */
    public EmployeeRecordSelectionFrame() {
        this.setUndecorated(true);
        initComponents();

        table.getTableHeader().setFont(new Font("Dialog", Font.PLAIN, 14));
        tableModel = (DefaultTableModel) table.getModel();
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePanel = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        tableScorllPanel = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        updateBtn = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JLabel();
        crossBtn = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        searchField.setForeground(new java.awt.Color(153, 153, 153));
        searchField.setText("Search By Keyword");
        searchField.setToolTipText("Sort The Table");
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFieldFocusLost(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });
        tablePanel.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 300, 40));

        table.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "E_ID", "Roll_ID", "Employee Name", "Surname", "CNIC", "Salary Type", "Salary", "Contact", "DOB", "Gender", "Address", "Specilization", "Experience", "Hire Date", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableMouseReleased(evt);
            }
        });
        tableScorllPanel.setViewportView(table);

        tablePanel.add(tableScorllPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 1210, 530));

        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updatebtn.png"))); // NOI18N
        updateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateBtnMouseEntered(evt);
            }
        });
        tablePanel.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 20, -1, -1));

        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebtn.png"))); // NOI18N
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteBtnMouseEntered(evt);
            }
        });
        tablePanel.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 20, -1, -1));

        getContentPane().add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 1250, 650));

        crossBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cross.png"))); // NOI18N
        crossBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crossBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                crossBtnMouseEntered(evt);
            }
        });
        getContentPane().add(crossBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 20, -1, -1));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/emp_bg.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusGained
        // TODO add your handling code here:
        if (searchField.getText().equals(searchTip)) {
            searchField.setText("");
        }
        searchField.setForeground(new Color(120, 120, 120));
        searchField.setFont(new Font("Tahoma", Font.PLAIN, 18));
        searchField.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
    }//GEN-LAST:event_searchFieldFocusGained

    private void searchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusLost
        // TODO add your handling code here:
        if (searchField.getText().isEmpty()) {
            searchField.setForeground(new Color(153, 153, 153));
            searchField.setFont(new Font("Century Gothic", Font.PLAIN, 18));
            searchField.setText(searchTip);
        }
    }//GEN-LAST:event_searchFieldFocusLost

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        UtilityMethods.searchDataFromTable(table, searchField);
    }//GEN-LAST:event_searchFieldKeyReleased

    private void tableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseReleased

    private void crossBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crossBtnMouseEntered
        // TODO add your handling code here:
        crossBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_crossBtnMouseEntered

    private void crossBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crossBtnMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_crossBtnMouseClicked

    private void updateBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMouseEntered
        // TODO add your handling code here:
        updateBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_updateBtnMouseEntered

    private void deleteBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseEntered
        // TODO add your handling code here:
        deleteBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_deleteBtnMouseEntered

    private void updateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMouseClicked
        // TODO add your handling code here:
        openFrame();
    }//GEN-LAST:event_updateBtnMouseClicked

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseClicked
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            EmployeeBean employee = new EmployeeBean();
            employee.setEmpId(new Integer(table.getValueAt(selectedRow, 0).toString()));

            employee.setModifiedBy(41);
            employee.setModifiedDate(new Date()+"");
            
            
            int status = new EmployeeDaoImpl().deleteEmployee(employee);
            if (status == 1) {
                JOptionPane.showMessageDialog(deleteBtn, "Record Successfully Deleted", "Confirmation Dialog", JOptionPane.INFORMATION_MESSAGE);
                updateTable();
            }

        }


    }//GEN-LAST:event_deleteBtnMouseClicked
    private void updateTable() {
        tableModel.setNumRows(0);
        table.getColumnModel().getColumn(0).setWidth(0);
        table.getColumnModel().getColumn(0).setMinWidth(0);
        table.getColumnModel().getColumn(0).setMaxWidth(0);

        table.getColumnModel().getColumn(1).setWidth(0);
        table.getColumnModel().getColumn(1).setMinWidth(0);
        table.getColumnModel().getColumn(1).setMaxWidth(0);

        ResultSet rs = new EmployeeDaoImpl().getAllEmployees();

        try {
            EmployeeBean employee;
            while (rs.next()) {
                employee = new EmployeeBean();

                employee.setEmpId(rs.getInt("emp_id"));
                employee.setEmpName(rs.getString("emp_name"));
                employee.setEmpSurname(rs.getString("surname"));
                employee.setEmpNic(rs.getString("cnic"));
                employee.setSalType(rs.getString("sal_type"));
                employee.setSalary(rs.getDouble("sal_value"));
                employee.setContact(rs.getString("contact"));
                employee.setDob(rs.getString("dob"));
                employee.setGender(rs.getString("gender"));
                employee.setAddress(rs.getString("address"));
                employee.setSpecialization(rs.getString("specialization"));
                employee.setExperience(rs.getString("experience"));
                employee.setHiredate(rs.getString("hire_date"));
                Integer rollId = rs.getInt("role_id");
                RoleBean role = new RoleDaoImpl().getRoleById(rollId);
                employee.setRole(role);

                tableModel.addRow(new Object[]{
                    employee.getEmpId(),
                    employee.getRole().getRoleId(),
                    employee.getEmpName(),
                    employee.getEmpSurname(),
                    employee.getEmpNic(),
                    employee.getSalType(),
                    employee.getSalary(),
                    employee.getContact(),
                    employee.getDob(),
                    employee.getGender(),
                    employee.getAddress(),
                    employee.getSpecialization(),
                    employee.getExperience(),
                    employee.getHiredate(),
                    employee.getRole().getRole(),
                });
            }
        } catch (SQLException sqle) {
            System.out.println("Exception is Employee Record Selection Frame in updateTable() Method...");
            System.out.println(sqle.getMessage());
        }
    }

    private void openFrame() {
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {

            EmployeeBean employee = new EmployeeBean();
            employee.setEmpId(new Integer(table.getValueAt(selectedRow, 0).toString()));
            
            

            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    EmployeeEntryFrame frame = new EmployeeEntryFrame(employee);
                    frame.setVisible(true);
                }
            });

            this.dispose();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeRecordSelectionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeRecordSelectionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeRecordSelectionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeRecordSelectionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeRecordSelectionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JLabel crossBtn;
    private javax.swing.JLabel deleteBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JTable table;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScorllPanel;
    private javax.swing.JLabel updateBtn;
    // End of variables declaration//GEN-END:variables
}
